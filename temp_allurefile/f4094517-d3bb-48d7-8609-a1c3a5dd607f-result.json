{"name": "测试密码长度超过限制", "status": "failed", "statusDetails": {"message": "AssertionError", "trace": "self = <test_login.TestLogin object at 0x7fd097fca4f0>\nconnect_db = <common.mysql.ConnectMysql object at 0x7fd09703f790>\nget_usernm_passwd = ('admin', 'e10adc3949ba59abbe56e057f20f883e')\nget_token = '0c239d2056e748e89e18cd23d089d231', test_login_clear = None\ncase_info = ['测试密码长度超过限制', '/apitest/login/', 'post', 'data', \"{'username':'test15','password':'123456784948494848484486486486'}\", '1、正确输入接口地址 2、正确输入请求参数 3、查看响应body是否正确', ...]\n\n    @allure.story('登录模块一')  # story：allure报告的三级目录\n    # 缺陷等级 blocker：中断缺陷 critical:临界缺陷 normal：普通缺陷 minor：次要缺陷 trivial：轻微的缺陷\n    @allure.severity(allure.severity_level.BLOCKER)\n    # @pytest.mark.usefixtures('connect_db')  # 另一种调用方式 级别为class\n    @pytest.mark.parametrize(\"case_info\",\n                             read.read_special_list_excel(GetFilePath().get_all_file_path(r'data/双创wa项目接口文档.xlsx'),\n                                                          'wa登录', [2, 5, 6, 7, 9, 11, 12, 13, 14],\n                                                          '登录login'))\n    #  用例描述2, 接口路径5, 请求方法6, 请求类型7, 参数9,步骤11， 预期结果code12,预期结果msg13,预期结果message14,\n    def test_login(self, connect_db, get_usernm_passwd, get_token, test_login_clear,\n                   case_info):\n        desc, url, method, request_type, args, step, expect_code, expect_result, expect_mes = case_info\n        allure.dynamic.title(desc)  # 用例的标题\n        allure.dynamic.description(desc)  # 用例的内容\n        url = get_server_formal() + url  # 组合url\n        print(get_token)\n        with allure.step(step):\n            datas = {\n                \"url\": url,\n                \"method\": method,\n                'data': eval(args)\n            }\n            res_actual = RequestStart().send_request(datas)\n            ResAssert.assert_code(expect_code, res_actual['Status'])\n            ResAssert.assert_message(expect_result, res_actual['Result'])\n>           ResAssert.assert_message(expect_mes, res_actual['Message'])\n\n../testcase/login/test_login.py:45: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../common/asserts.py:49: in assert_message\n    raise e\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <common.asserts.ResponseAssert object at 0x7fd097fb9160>\nexpect_mes = '用户名错误', actual_mes = '用户名或密码错误'\n\n    @allure.step(\"step：响应文本信息结果断言\")\n    def assert_message(self, expect_mes, actual_mes):\n        try:\n            log.debug(f'Response_Message实际结果为：{actual_mes}')\n            log.debug(f'Response_Message预期结果为：{expect_mes}')\n>           assert str(actual_mes) == str(expect_mes)  # 成立返回TURE，失败返回FALSE\nE           AssertionError\n\n../common/asserts.py:44: AssertionError"}, "description": "测试密码长度超过限制", "steps": [{"name": "1、正确输入接口地址 2、正确输入请求参数 3、查看响应body是否正确", "status": "failed", "statusDetails": {"message": "AssertionError\n", "trace": "  File \"/Users/yangjingkang/PycharmProjects/YJK_api-master/testcase/login/test_login.py\", line 45, in test_login\n    ResAssert.assert_message(expect_mes, res_actual['Message'])\n  File \"/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/allure_commons/_allure.py\", line 172, in impl\n    return func(*a, **kw)\n  File \"/Users/yangjingkang/PycharmProjects/YJK_api-master/common/asserts.py\", line 49, in assert_message\n    raise e\n  File \"/Users/yangjingkang/PycharmProjects/YJK_api-master/common/asserts.py\", line 44, in assert_message\n    assert str(actual_mes) == str(expect_mes)  # 成立返回TURE，失败返回FALSE\n"}, "steps": [{"name": "step：响应状态码结果断言", "status": "passed", "parameters": [{"name": "expect_code", "value": "1004"}, {"name": "actual_code", "value": "1004"}], "start": 1673005304731, "stop": 1673005304732}, {"name": "step：响应文本信息结果断言", "status": "passed", "parameters": [{"name": "expect_mes", "value": "'Password error'"}, {"name": "actual_mes", "value": "'Password error'"}], "start": 1673005304732, "stop": 1673005304733}, {"name": "step：响应文本信息结果断言", "status": "failed", "statusDetails": {"message": "AssertionError\n", "trace": "  File \"/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/allure_commons/_allure.py\", line 172, in impl\n    return func(*a, **kw)\n  File \"/Users/yangjingkang/PycharmProjects/YJK_api-master/common/asserts.py\", line 49, in assert_message\n    raise e\n  File \"/Users/yangjingkang/PycharmProjects/YJK_api-master/common/asserts.py\", line 44, in assert_message\n    assert str(actual_mes) == str(expect_mes)  # 成立返回TURE，失败返回FALSE\n"}, "parameters": [{"name": "expect_mes", "value": "'用户名错误'"}, {"name": "actual_mes", "value": "'用户名或密码错误'"}], "start": 1673005304733, "stop": 1673005304734}], "start": 1673005304723, "stop": 1673005304734}], "attachments": [{"name": "log", "source": "ee10b081-ef89-4d17-8a6f-792a484ef9b4-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "case_info", "value": "['测试密码长度超过限制', '/apitest/login/', 'post', 'data', \"{'username':'test15','password':'123456784948494848484486486486'}\", '1、正确输入接口地址 2、正确输入请求参数 3、查看响应body是否正确', 1004, 'Password error', '用户名错误']"}], "start": 1673005304722, "stop": 1673005304734, "uuid": "9b1a5eaa-a3df-48d1-8058-f2481325d143", "historyId": "03b705a5ff46d14bcd1d1dd982e1a7c7", "testCaseId": "4889d07dae2d759cdb1db82bb4514077", "fullName": "testcase.login.test_login.TestLogin#test_login", "labels": [{"name": "story", "value": "登录模块一"}, {"name": "epic", "value": "双创项目"}, {"name": "severity", "value": "blocker"}, {"name": "feature", "value": "登录"}, {"name": "tag", "value": "run(order=1)"}, {"name": "parentSuite", "value": "testcase.login"}, {"name": "suite", "value": "test_login"}, {"name": "subSuite", "value": "TestLogin"}, {"name": "host", "value": "B-J2XDLVDL-0131.local"}, {"name": "thread", "value": "13797-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testcase.login.test_login"}], "links": [{"type": "issue", "url": "https://www.baidu.com", "name": "https://www.baidu.com"}, {"type": "link", "url": "https://www.baidu.com", "name": "https://www.baidu.com"}]}