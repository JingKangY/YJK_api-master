{
  "uid" : "eaab7b1252382bf7",
  "name" : "测试一下",
  "fullName" : "testcase.erxing_Love_Letter.test_get_bullet_screen_content.TesttestBulletScreenContent#test_get_bullet_screen_content",
  "historyId" : "9efc3c33641bc3eacf918428d09db401",
  "time" : {
    "start" : 1673005304115,
    "stop" : 1673005304350,
    "duration" : 235
  },
  "description" : "测试一下",
  "descriptionHtml" : "<p>测试一下</p>\n",
  "status" : "failed",
  "statusMessage" : "AssertionError",
  "statusTrace" : "self = <test_get_bullet_screen_content.TesttestBulletScreenContent object at 0x7fd097fb98e0>\ncase_info = ['测试一下', 'https://p10496-hk-bbs.ejoy.com/api/bbs/S3G二周年两行情书/index?count=100', 'get', '1、正确输入接口地址 2、正确输入请求参数 3、查看响应body是否正确', '3e4547b4bb12e9047950252d64b63472']\n\n    @allure.story('登录模块一')  # story：allure报告的三级目录\n    # 缺陷等级 blocker：中断缺陷 critical:临界缺陷 normal：普通缺陷 minor：次要缺陷 trivial：轻微的缺陷\n    @allure.severity(allure.severity_level.BLOCKER)\n    # @pytest.mark.usefixtures('connect_db')  # 另一种调用方式 级别为class\n    # @pytest.mark.parametrize(\"case_info\",\n    #                          read.read_special_list_excel(GetFilePath().get_all_file_path(r'data/双创wa项目接口文档.xlsx'),\n    #                                                       'wa登录', [2, 5, 6, 7, 9, 11, 12, 13, 14],\n    #                                                       '登录login'))\n    #  用例描述2, 接口路径5, 请求方法6, 请求类型7, 参数9,步骤11， 预期结果code12,预期结果msg13,预期结果message14,\n    @pytest.mark.parametrize('case_info', [['测试一下', 'https://p10496-hk-bbs.ejoy.com/api/bbs/S3G二周年两行情书/index?count=100','get',\n                                           '1、正确输入接口地址 2、正确输入请求参数 3、查看响应body是否正确','3e4547b4bb12e9047950252d64b63472']])\n    def test_get_bullet_screen_content(self,case_info):\n        desc, url, method ,step ,expect_id= case_info\n        allure.dynamic.title(desc)  # 用例的标题\n        allure.dynamic.description(desc)  # 用例的内容\n        with allure.step(step):\n            datas = {\n                \"url\": url,\n                \"method\": method\n            }\n            res_actual = RequestStart().send_request(datas)\n>           ResAssert.assert_code(expect_id, res_actual['thread_infos'][0]['uid'])\n\n../testcase/erxing_Love_Letter/test_get_bullet_screen_content.py:41: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../common/asserts.py:37: in assert_code\n    raise e\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <common.asserts.ResponseAssert object at 0x7fd097fb9160>\nexpect_code = '3e4547b4bb12e9047950252d64b63472'\nactual_code = '6088b66e2230325e4b1970e5120a11fc'\n\n    @allure.step(\"step：响应状态码结果断言\")\n    def assert_code(self, expect_code, actual_code):\n        try:\n            log.debug(f'Response_Code实际结果为：{actual_code}')\n            log.debug(f'Response_Code预期结果为：{expect_code}')\n>           assert str(actual_code) == str(expect_code)  # 成立返回TURE，失败返回FALSE\nE           AssertionError\n\n../common/asserts.py:32: AssertionError",
  "flaky" : false,
  "beforeStages" : [ {
    "name" : "_verify_url",
    "time" : {
      "start" : 1673005304044,
      "stop" : 1673005304044,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "_session_faker",
    "time" : {
      "start" : 1673005304044,
      "stop" : 1673005304113,
      "duration" : 69
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "base_url",
    "time" : {
      "start" : 1673005304044,
      "stop" : 1673005304044,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "testStage" : {
    "description" : "测试一下",
    "status" : "failed",
    "statusMessage" : "AssertionError",
    "statusTrace" : "self = <test_get_bullet_screen_content.TesttestBulletScreenContent object at 0x7fd097fb98e0>\ncase_info = ['测试一下', 'https://p10496-hk-bbs.ejoy.com/api/bbs/S3G二周年两行情书/index?count=100', 'get', '1、正确输入接口地址 2、正确输入请求参数 3、查看响应body是否正确', '3e4547b4bb12e9047950252d64b63472']\n\n    @allure.story('登录模块一')  # story：allure报告的三级目录\n    # 缺陷等级 blocker：中断缺陷 critical:临界缺陷 normal：普通缺陷 minor：次要缺陷 trivial：轻微的缺陷\n    @allure.severity(allure.severity_level.BLOCKER)\n    # @pytest.mark.usefixtures('connect_db')  # 另一种调用方式 级别为class\n    # @pytest.mark.parametrize(\"case_info\",\n    #                          read.read_special_list_excel(GetFilePath().get_all_file_path(r'data/双创wa项目接口文档.xlsx'),\n    #                                                       'wa登录', [2, 5, 6, 7, 9, 11, 12, 13, 14],\n    #                                                       '登录login'))\n    #  用例描述2, 接口路径5, 请求方法6, 请求类型7, 参数9,步骤11， 预期结果code12,预期结果msg13,预期结果message14,\n    @pytest.mark.parametrize('case_info', [['测试一下', 'https://p10496-hk-bbs.ejoy.com/api/bbs/S3G二周年两行情书/index?count=100','get',\n                                           '1、正确输入接口地址 2、正确输入请求参数 3、查看响应body是否正确','3e4547b4bb12e9047950252d64b63472']])\n    def test_get_bullet_screen_content(self,case_info):\n        desc, url, method ,step ,expect_id= case_info\n        allure.dynamic.title(desc)  # 用例的标题\n        allure.dynamic.description(desc)  # 用例的内容\n        with allure.step(step):\n            datas = {\n                \"url\": url,\n                \"method\": method\n            }\n            res_actual = RequestStart().send_request(datas)\n>           ResAssert.assert_code(expect_id, res_actual['thread_infos'][0]['uid'])\n\n../testcase/erxing_Love_Letter/test_get_bullet_screen_content.py:41: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../common/asserts.py:37: in assert_code\n    raise e\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <common.asserts.ResponseAssert object at 0x7fd097fb9160>\nexpect_code = '3e4547b4bb12e9047950252d64b63472'\nactual_code = '6088b66e2230325e4b1970e5120a11fc'\n\n    @allure.step(\"step：响应状态码结果断言\")\n    def assert_code(self, expect_code, actual_code):\n        try:\n            log.debug(f'Response_Code实际结果为：{actual_code}')\n            log.debug(f'Response_Code预期结果为：{expect_code}')\n>           assert str(actual_code) == str(expect_code)  # 成立返回TURE，失败返回FALSE\nE           AssertionError\n\n../common/asserts.py:32: AssertionError",
    "steps" : [ {
      "name" : "1、正确输入接口地址 2、正确输入请求参数 3、查看响应body是否正确",
      "time" : {
        "start" : 1673005304115,
        "stop" : 1673005304349,
        "duration" : 234
      },
      "status" : "failed",
      "statusMessage" : "AssertionError\n",
      "statusTrace" : "  File \"/Users/yangjingkang/PycharmProjects/YJK_api-master/testcase/erxing_Love_Letter/test_get_bullet_screen_content.py\", line 41, in test_get_bullet_screen_content\n    ResAssert.assert_code(expect_id, res_actual['thread_infos'][0]['uid'])\n  File \"/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/allure_commons/_allure.py\", line 172, in impl\n    return func(*a, **kw)\n  File \"/Users/yangjingkang/PycharmProjects/YJK_api-master/common/asserts.py\", line 37, in assert_code\n    raise e\n  File \"/Users/yangjingkang/PycharmProjects/YJK_api-master/common/asserts.py\", line 32, in assert_code\n    assert str(actual_code) == str(expect_code)  # 成立返回TURE，失败返回FALSE\n",
      "steps" : [ {
        "name" : "step：响应状态码结果断言",
        "time" : {
          "start" : 1673005304346,
          "stop" : 1673005304347,
          "duration" : 1
        },
        "status" : "failed",
        "statusMessage" : "AssertionError\n",
        "statusTrace" : "  File \"/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/allure_commons/_allure.py\", line 172, in impl\n    return func(*a, **kw)\n  File \"/Users/yangjingkang/PycharmProjects/YJK_api-master/common/asserts.py\", line 37, in assert_code\n    raise e\n  File \"/Users/yangjingkang/PycharmProjects/YJK_api-master/common/asserts.py\", line 32, in assert_code\n    assert str(actual_code) == str(expect_code)  # 成立返回TURE，失败返回FALSE\n",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ {
          "name" : "expect_code",
          "value" : "'3e4547b4bb12e9047950252d64b63472'"
        }, {
          "name" : "actual_code",
          "value" : "'6088b66e2230325e4b1970e5120a11fc'"
        } ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : true,
        "hasContent" : true
      } ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 1,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    } ],
    "attachments" : [ {
      "uid" : "f2106d56aa6bd115",
      "name" : "log",
      "source" : "f2106d56aa6bd115.txt",
      "type" : "text/plain",
      "size" : 5273
    } ],
    "parameters" : [ ],
    "stepsCount" : 2,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "story",
    "value" : "登录模块一"
  }, {
    "name" : "epic",
    "value" : "双创项目"
  }, {
    "name" : "severity",
    "value" : "blocker"
  }, {
    "name" : "feature",
    "value" : "登录"
  }, {
    "name" : "tag",
    "value" : "run(order=1)"
  }, {
    "name" : "parentSuite",
    "value" : "testcase.erxing_Love_Letter"
  }, {
    "name" : "suite",
    "value" : "test_get_bullet_screen_content"
  }, {
    "name" : "subSuite",
    "value" : "TesttestBulletScreenContent"
  }, {
    "name" : "host",
    "value" : "B-J2XDLVDL-0131.local"
  }, {
    "name" : "thread",
    "value" : "13797-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "testcase.erxing_Love_Letter.test_get_bullet_screen_content"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "case_info",
    "value" : "['测试一下', 'https://p10496-hk-bbs.ejoy.com/api/bbs/S3G二周年两行情书/index?count=100', 'get', '1、正确输入接口地址 2、正确输入请求参数 3、查看响应body是否正确', '3e4547b4bb12e9047950252d64b63472']"
  } ],
  "links" : [ {
    "name" : "https://www.baidu.com",
    "url" : "https://www.baidu.com",
    "type" : "issue"
  }, {
    "name" : "https://www.baidu.com",
    "url" : "https://www.baidu.com",
    "type" : "link"
  } ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "blocker",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ "run(order=1)" ]
  },
  "source" : "eaab7b1252382bf7.json",
  "parameterValues" : [ "['测试一下', 'https://p10496-hk-bbs.ejoy.com/api/bbs/S3G二周年两行情书/index?count=100', 'get', '1、正确输入接口地址 2、正确输入请求参数 3、查看响应body是否正确', '3e4547b4bb12e9047950252d64b63472']" ]
}