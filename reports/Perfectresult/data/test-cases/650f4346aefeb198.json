{
  "uid" : "650f4346aefeb198",
  "name" : "测试密码错误",
  "fullName" : "testcase.login.test_login.TestLogin#test_login",
  "historyId" : "b23aec1f2b9c6808e09dc308a61def06",
  "time" : {
    "start" : 1673005304593,
    "stop" : 1673005304606,
    "duration" : 13
  },
  "description" : "测试密码错误",
  "descriptionHtml" : "<p>测试密码错误</p>\n",
  "status" : "failed",
  "statusMessage" : "AssertionError",
  "statusTrace" : "self = <test_login.TestLogin object at 0x7fd098111fa0>\nconnect_db = <common.mysql.ConnectMysql object at 0x7fd09703f790>\nget_usernm_passwd = ('admin', 'e10adc3949ba59abbe56e057f20f883e')\nget_token = '0c239d2056e748e89e18cd23d089d231', test_login_clear = None\ncase_info = ['测试密码错误', '/apitest/login/', 'post', 'data', \"{'username':'test03','password':'123'}\", '1、正确输入接口地址 2、正确输入请求参数 3、查看响应body是否正确', ...]\n\n    @allure.story('登录模块一')  # story：allure报告的三级目录\n    # 缺陷等级 blocker：中断缺陷 critical:临界缺陷 normal：普通缺陷 minor：次要缺陷 trivial：轻微的缺陷\n    @allure.severity(allure.severity_level.BLOCKER)\n    # @pytest.mark.usefixtures('connect_db')  # 另一种调用方式 级别为class\n    @pytest.mark.parametrize(\"case_info\",\n                             read.read_special_list_excel(GetFilePath().get_all_file_path(r'data/双创wa项目接口文档.xlsx'),\n                                                          'wa登录', [2, 5, 6, 7, 9, 11, 12, 13, 14],\n                                                          '登录login'))\n    #  用例描述2, 接口路径5, 请求方法6, 请求类型7, 参数9,步骤11， 预期结果code12,预期结果msg13,预期结果message14,\n    def test_login(self, connect_db, get_usernm_passwd, get_token, test_login_clear,\n                   case_info):\n        desc, url, method, request_type, args, step, expect_code, expect_result, expect_mes = case_info\n        allure.dynamic.title(desc)  # 用例的标题\n        allure.dynamic.description(desc)  # 用例的内容\n        url = get_server_formal() + url  # 组合url\n        print(get_token)\n        with allure.step(step):\n            datas = {\n                \"url\": url,\n                \"method\": method,\n                'data': eval(args)\n            }\n            res_actual = RequestStart().send_request(datas)\n            ResAssert.assert_code(expect_code, res_actual['Status'])\n>           ResAssert.assert_message(expect_result, res_actual['Result'])\n\n../testcase/login/test_login.py:44: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../common/asserts.py:49: in assert_message\n    raise e\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <common.asserts.ResponseAssert object at 0x7fd097fb9160>\nexpect_mes = 'Password error', actual_mes = 'Username error'\n\n    @allure.step(\"step：响应文本信息结果断言\")\n    def assert_message(self, expect_mes, actual_mes):\n        try:\n            log.debug(f'Response_Message实际结果为：{actual_mes}')\n            log.debug(f'Response_Message预期结果为：{expect_mes}')\n>           assert str(actual_mes) == str(expect_mes)  # 成立返回TURE，失败返回FALSE\nE           AssertionError\n\n../common/asserts.py:44: AssertionError",
  "flaky" : false,
  "beforeStages" : [ {
    "name" : "get_usernm_passwd",
    "time" : {
      "start" : 1673005304452,
      "stop" : 1673005304457,
      "duration" : 5
    },
    "status" : "passed",
    "steps" : [ {
      "name" : "获取用户账户、密码",
      "time" : {
        "start" : 1673005304452,
        "stop" : 1673005304456,
        "duration" : 4
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ {
        "name" : "sql",
        "value" : "'SELECT username FROM `users` WHERE id = '1''"
      } ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    }, {
      "name" : "获取用户账户、密码",
      "time" : {
        "start" : 1673005304456,
        "stop" : 1673005304457,
        "duration" : 1
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ {
        "name" : "sql",
        "value" : "'SELECT password FROM `users` WHERE id = '1''"
      } ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 2,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "connect_db",
    "time" : {
      "start" : 1673005304444,
      "stop" : 1673005304452,
      "duration" : 8
    },
    "status" : "passed",
    "steps" : [ {
      "name" : "连接数据库",
      "time" : {
        "start" : 1673005304445,
        "stop" : 1673005304451,
        "duration" : 6
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ {
        "name" : "dbinfo",
        "value" : "{'host': '172.16.9.128', 'db': 'wa_test', 'user': 'root', 'passwd': '123456'}"
      } ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 1,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "_verify_url",
    "time" : {
      "start" : 1673005304044,
      "stop" : 1673005304044,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "_session_faker",
    "time" : {
      "start" : 1673005304044,
      "stop" : 1673005304113,
      "duration" : 69
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "get_token",
    "time" : {
      "start" : 1673005304457,
      "stop" : 1673005304459,
      "duration" : 2
    },
    "status" : "passed",
    "steps" : [ {
      "name" : "获取数据库存储的token值",
      "time" : {
        "start" : 1673005304457,
        "stop" : 1673005304459,
        "duration" : 2
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ {
        "name" : "sql",
        "value" : "'SELECT token_value FROM wa_test.token'"
      } ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 1,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "base_url",
    "time" : {
      "start" : 1673005304044,
      "stop" : 1673005304044,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "test_login_clear",
    "time" : {
      "start" : 1673005304459,
      "stop" : 1673005304495,
      "duration" : 36
    },
    "status" : "passed",
    "steps" : [ {
      "name" : "初始化数据库信息",
      "time" : {
        "start" : 1673005304459,
        "stop" : 1673005304461,
        "duration" : 2
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ {
        "name" : "sql",
        "value" : "'DELETE FROM info WHERE id=4'"
      } ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    }, {
      "name" : "初始化数据库信息",
      "time" : {
        "start" : 1673005304461,
        "stop" : 1673005304464,
        "duration" : 3
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ {
        "name" : "sql",
        "value" : "'DELETE FROM users WHERE id=4'"
      } ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    }, {
      "name" : "写入数据库信息",
      "time" : {
        "start" : 1673005304464,
        "stop" : 1673005304467,
        "duration" : 3
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ {
        "name" : "sql",
        "value" : "'INSERT INTO users(id, username, password) VALUES(4, 'test01', md5('123456'))'"
      } ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    }, {
      "name" : "初始化数据库信息",
      "time" : {
        "start" : 1673005304467,
        "stop" : 1673005304469,
        "duration" : 2
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ {
        "name" : "sql",
        "value" : "'DELETE FROM info WHERE id=5'"
      } ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    }, {
      "name" : "初始化数据库信息",
      "time" : {
        "start" : 1673005304470,
        "stop" : 1673005304471,
        "duration" : 1
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ {
        "name" : "sql",
        "value" : "'DELETE FROM users WHERE id=5'"
      } ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    }, {
      "name" : "写入数据库信息",
      "time" : {
        "start" : 1673005304472,
        "stop" : 1673005304474,
        "duration" : 2
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ {
        "name" : "sql",
        "value" : "'INSERT INTO users(id, username, password) VALUES(5, 'test02', md5('123456'))'"
      } ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    }, {
      "name" : "初始化数据库信息",
      "time" : {
        "start" : 1673005304475,
        "stop" : 1673005304476,
        "duration" : 1
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ {
        "name" : "sql",
        "value" : "'INSERT INTO info(id, name) VALUES(5, '登录密码为空用户')'"
      } ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    }, {
      "name" : "初始化数据库信息",
      "time" : {
        "start" : 1673005304476,
        "stop" : 1673005304478,
        "duration" : 2
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ {
        "name" : "sql",
        "value" : "'DELETE FROM info WHERE name='登录用户名错误用户''"
      } ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    }, {
      "name" : "初始化数据库信息",
      "time" : {
        "start" : 1673005304478,
        "stop" : 1673005304479,
        "duration" : 1
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ {
        "name" : "sql",
        "value" : "'DELETE FROM users WHERE username='test03''"
      } ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    }, {
      "name" : "初始化数据库信息",
      "time" : {
        "start" : 1673005304479,
        "stop" : 1673005304481,
        "duration" : 2
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ {
        "name" : "sql",
        "value" : "'DELETE FROM info WHERE id=6'"
      } ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    }, {
      "name" : "初始化数据库信息",
      "time" : {
        "start" : 1673005304481,
        "stop" : 1673005304483,
        "duration" : 2
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ {
        "name" : "sql",
        "value" : "'DELETE FROM users WHERE id=6'"
      } ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    }, {
      "name" : "写入数据库信息",
      "time" : {
        "start" : 1673005304483,
        "stop" : 1673005304485,
        "duration" : 2
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ {
        "name" : "sql",
        "value" : "'INSERT INTO users(id, username, password) VALUES(6, 'test04', md5('123456'))'"
      } ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    }, {
      "name" : "初始化数据库信息",
      "time" : {
        "start" : 1673005304485,
        "stop" : 1673005304486,
        "duration" : 1
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ {
        "name" : "sql",
        "value" : "'INSERT INTO info(id, name) VALUES(6, '登录密码错误用户')'"
      } ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    }, {
      "name" : "初始化数据库信息",
      "time" : {
        "start" : 1673005304486,
        "stop" : 1673005304488,
        "duration" : 2
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ {
        "name" : "sql",
        "value" : "'DELETE FROM info WHERE name='登录用户名与密码均错误用户''"
      } ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    }, {
      "name" : "初始化数据库信息",
      "time" : {
        "start" : 1673005304488,
        "stop" : 1673005304489,
        "duration" : 1
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ {
        "name" : "sql",
        "value" : "'DELETE FROM users WHERE username='test05''"
      } ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    }, {
      "name" : "初始化数据库信息",
      "time" : {
        "start" : 1673005304489,
        "stop" : 1673005304490,
        "duration" : 1
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ {
        "name" : "sql",
        "value" : "'DELETE FROM info WHERE id=8'"
      } ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    }, {
      "name" : "初始化数据库信息",
      "time" : {
        "start" : 1673005304490,
        "stop" : 1673005304492,
        "duration" : 2
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ {
        "name" : "sql",
        "value" : "'DELETE FROM users WHERE id=8'"
      } ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    }, {
      "name" : "写入数据库信息",
      "time" : {
        "start" : 1673005304492,
        "stop" : 1673005304494,
        "duration" : 2
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ {
        "name" : "sql",
        "value" : "'INSERT INTO users(id, username, password) VALUES(8, 'test15', md5('123456'))'"
      } ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    }, {
      "name" : "初始化数据库信息",
      "time" : {
        "start" : 1673005304494,
        "stop" : 1673005304495,
        "duration" : 1
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ {
        "name" : "sql",
        "value" : "'INSERT INTO info(id, name) VALUES(8, '密码超过限制长度')'"
      } ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 19,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  } ],
  "testStage" : {
    "description" : "测试密码错误",
    "status" : "failed",
    "statusMessage" : "AssertionError",
    "statusTrace" : "self = <test_login.TestLogin object at 0x7fd098111fa0>\nconnect_db = <common.mysql.ConnectMysql object at 0x7fd09703f790>\nget_usernm_passwd = ('admin', 'e10adc3949ba59abbe56e057f20f883e')\nget_token = '0c239d2056e748e89e18cd23d089d231', test_login_clear = None\ncase_info = ['测试密码错误', '/apitest/login/', 'post', 'data', \"{'username':'test03','password':'123'}\", '1、正确输入接口地址 2、正确输入请求参数 3、查看响应body是否正确', ...]\n\n    @allure.story('登录模块一')  # story：allure报告的三级目录\n    # 缺陷等级 blocker：中断缺陷 critical:临界缺陷 normal：普通缺陷 minor：次要缺陷 trivial：轻微的缺陷\n    @allure.severity(allure.severity_level.BLOCKER)\n    # @pytest.mark.usefixtures('connect_db')  # 另一种调用方式 级别为class\n    @pytest.mark.parametrize(\"case_info\",\n                             read.read_special_list_excel(GetFilePath().get_all_file_path(r'data/双创wa项目接口文档.xlsx'),\n                                                          'wa登录', [2, 5, 6, 7, 9, 11, 12, 13, 14],\n                                                          '登录login'))\n    #  用例描述2, 接口路径5, 请求方法6, 请求类型7, 参数9,步骤11， 预期结果code12,预期结果msg13,预期结果message14,\n    def test_login(self, connect_db, get_usernm_passwd, get_token, test_login_clear,\n                   case_info):\n        desc, url, method, request_type, args, step, expect_code, expect_result, expect_mes = case_info\n        allure.dynamic.title(desc)  # 用例的标题\n        allure.dynamic.description(desc)  # 用例的内容\n        url = get_server_formal() + url  # 组合url\n        print(get_token)\n        with allure.step(step):\n            datas = {\n                \"url\": url,\n                \"method\": method,\n                'data': eval(args)\n            }\n            res_actual = RequestStart().send_request(datas)\n            ResAssert.assert_code(expect_code, res_actual['Status'])\n>           ResAssert.assert_message(expect_result, res_actual['Result'])\n\n../testcase/login/test_login.py:44: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../common/asserts.py:49: in assert_message\n    raise e\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <common.asserts.ResponseAssert object at 0x7fd097fb9160>\nexpect_mes = 'Password error', actual_mes = 'Username error'\n\n    @allure.step(\"step：响应文本信息结果断言\")\n    def assert_message(self, expect_mes, actual_mes):\n        try:\n            log.debug(f'Response_Message实际结果为：{actual_mes}')\n            log.debug(f'Response_Message预期结果为：{expect_mes}')\n>           assert str(actual_mes) == str(expect_mes)  # 成立返回TURE，失败返回FALSE\nE           AssertionError\n\n../common/asserts.py:44: AssertionError",
    "steps" : [ {
      "name" : "1、正确输入接口地址 2、正确输入请求参数 3、查看响应body是否正确",
      "time" : {
        "start" : 1673005304594,
        "stop" : 1673005304605,
        "duration" : 11
      },
      "status" : "failed",
      "statusMessage" : "AssertionError\n",
      "statusTrace" : "  File \"/Users/yangjingkang/PycharmProjects/YJK_api-master/testcase/login/test_login.py\", line 44, in test_login\n    ResAssert.assert_message(expect_result, res_actual['Result'])\n  File \"/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/allure_commons/_allure.py\", line 172, in impl\n    return func(*a, **kw)\n  File \"/Users/yangjingkang/PycharmProjects/YJK_api-master/common/asserts.py\", line 49, in assert_message\n    raise e\n  File \"/Users/yangjingkang/PycharmProjects/YJK_api-master/common/asserts.py\", line 44, in assert_message\n    assert str(actual_mes) == str(expect_mes)  # 成立返回TURE，失败返回FALSE\n",
      "steps" : [ {
        "name" : "step：响应状态码结果断言",
        "time" : {
          "start" : 1673005304603,
          "stop" : 1673005304604,
          "duration" : 1
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ {
          "name" : "expect_code",
          "value" : "1003"
        }, {
          "name" : "actual_code",
          "value" : "1003"
        } ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : true
      }, {
        "name" : "step：响应文本信息结果断言",
        "time" : {
          "start" : 1673005304604,
          "stop" : 1673005304605,
          "duration" : 1
        },
        "status" : "failed",
        "statusMessage" : "AssertionError\n",
        "statusTrace" : "  File \"/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/allure_commons/_allure.py\", line 172, in impl\n    return func(*a, **kw)\n  File \"/Users/yangjingkang/PycharmProjects/YJK_api-master/common/asserts.py\", line 49, in assert_message\n    raise e\n  File \"/Users/yangjingkang/PycharmProjects/YJK_api-master/common/asserts.py\", line 44, in assert_message\n    assert str(actual_mes) == str(expect_mes)  # 成立返回TURE，失败返回FALSE\n",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ {
          "name" : "expect_mes",
          "value" : "'Password error'"
        }, {
          "name" : "actual_mes",
          "value" : "'Username error'"
        } ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : true,
        "hasContent" : true
      } ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 2,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    } ],
    "attachments" : [ {
      "uid" : "906b16aeaf95c7ad",
      "name" : "log",
      "source" : "906b16aeaf95c7ad.txt",
      "type" : "text/plain",
      "size" : 921
    } ],
    "parameters" : [ ],
    "stepsCount" : 3,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ {
    "name" : "get_usernm_passwd::0",
    "time" : {
      "start" : 1673005304745,
      "stop" : 1673005304745,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "connect_db::0",
    "time" : {
      "start" : 1673005304746,
      "stop" : 1673005304747,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ {
      "name" : "关闭数据库连接",
      "time" : {
        "start" : 1673005304747,
        "stop" : 1673005304747,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 1,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "get_token::0",
    "time" : {
      "start" : 1673005304744,
      "stop" : 1673005304744,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "story",
    "value" : "登录模块一"
  }, {
    "name" : "epic",
    "value" : "双创项目"
  }, {
    "name" : "severity",
    "value" : "blocker"
  }, {
    "name" : "feature",
    "value" : "登录"
  }, {
    "name" : "tag",
    "value" : "run(order=1)"
  }, {
    "name" : "parentSuite",
    "value" : "testcase.login"
  }, {
    "name" : "suite",
    "value" : "test_login"
  }, {
    "name" : "subSuite",
    "value" : "TestLogin"
  }, {
    "name" : "host",
    "value" : "B-J2XDLVDL-0131.local"
  }, {
    "name" : "thread",
    "value" : "13797-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "testcase.login.test_login"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "case_info",
    "value" : "['测试密码错误', '/apitest/login/', 'post', 'data', \"{'username':'test03','password':'123'}\", '1、正确输入接口地址 2、正确输入请求参数 3、查看响应body是否正确', 1003, 'Password error', '密码错误']"
  } ],
  "links" : [ {
    "name" : "https://www.baidu.com",
    "url" : "https://www.baidu.com",
    "type" : "issue"
  }, {
    "name" : "https://www.baidu.com",
    "url" : "https://www.baidu.com",
    "type" : "link"
  } ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "blocker",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ "run(order=1)" ]
  },
  "source" : "650f4346aefeb198.json",
  "parameterValues" : [ "['测试密码错误', '/apitest/login/', 'post', 'data', \"{'username':'test03','password':'123'}\", '1、正确输入接口地址 2、正确输入请求参数 3、查看响应body是否正确', 1003, 'Password error', '密码错误']" ]
}