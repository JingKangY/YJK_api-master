D 2022-12-27 23:18:48,007| DEBUG    | [factory.py:factory:<module>:19] - Not in REPL -> leaving logger event level as is.
I 2022-12-27 23:18:53,825| INFO     | [get_data.py:get_data:read_special_list_excel:137] - 成功获取登录login所有用例，共12条用例
I 2022-12-27 23:18:53,825| INFO     | [get_data.py:get_data:read_special_list_excel:138] - [['测试成功登录', '/apitest/login/', 'post', 'data', "{'username':'test01','password':'123456'}", '1、正确输入接口地址 2、正确输入请求参数 3、查看响应body是否正确', 1000, 'Usercheck ok', '登录验证成功'], ['测试用户名为空', '/apitest/login/', 'post', 'data', "{'username':'','password':'123456'}", '1、正确输入接口地址 2、正确输入请求参数 3、查看响应body是否正确', 1001, 'Username is null', '用户名不能为空'], ['测试密码为空', '/apitest/login/', 'post', 'data', "{'username':'test02','password':''}", '1、正确输入接口地址 2、正确输入请求参数 3、查看响应body是否正确', 1002, 'Password is null', '密码不能为空'], ['测试用户名和密码均为空', '/apitest/login/', 'post', 'data', "{'username':'','password':''}", '1、正确输入接口地址 2、正确输入请求参数 3、查看响应body是否正确', 1001, 'Username is null', '用户名不能为空'], ['测试用户名错误', '/apitest/login/', 'post', 'data', "{'username':'test03','password':'123456'}", '1、正确输入接口地址 2、正确输入请求参数 3、查看响应body是否正确', 1003, 'Username error', '用户名错误'], ['测试密码错误', '/apitest/login/', 'post', 'data', "{'username':'test03','password':'123'}", '1、正确输入接口地址 2、正确输入请求参数 3、查看响应body是否正确', 1003, 'Password error', '密码错误'], ['测试用户名和密码均错误', '/apitest/login/', 'post', 'data', "{'username':'test05','password':'123'}", '1、正确输入接口地址 2、正确输入请求参数 3、查看响应body是否正确', 1003, 'Username error', '用户名错误'], ['测试用户名为中文', '/apitest/login/', 'post', 'data', "{'username':'你好','password':'123456'}", '1、正确输入接口地址 2、正确输入请求参数 3、查看响应body是否正确', 1003, 'Username error', '用户名错误'], ['测试用户名为数字', '/apitest/login/', 'post', 'data', "{'username':'123456','password':'123456'}", '1、正确输入接口地址 2、正确输入请求参数 3、查看响应body是否正确', 1003, 'Username error', '用户名错误'], ['测试密码为无效最大边界值', '/apitest/login/', 'post', 'data', "{'username':'test05','password':'12345678945647898468464'}", '1、正确输入接口地址 2、正确输入请求参数 3、查看响应body是否正确', 1003, 'Username error', '用户名错误'], ['测试用户名为特殊字符', '/apitest/login/', 'post', 'data', "{'username':'*%$','password':'123456'}", '1、正确输入接口地址 2、正确输入请求参数 3、查看响应body是否正确', 1003, 'Username error', '用户名错误'], ['测试密码长度超过限制', '/apitest/login/', 'post', 'data', "{'username':'test15','password':'123456784948494848484486486486'}", '1、正确输入接口地址 2、正确输入请求参数 3、查看响应body是否正确', 1004, 'Password error', '用户名错误']]
I 2022-12-27 23:18:53,850| INFO     | [get_data.py:get_data:read_special_rows_list_excel:160] - 成功从获取第12到12用例,共1条用例
I 2022-12-27 23:18:53,850| INFO     | [get_data.py:get_data:read_special_rows_list_excel:161] - [['测试密码长度超过限制', '/apitest/login/', 'post', '1、正确输入接口地址 2、正确输入请求参数 3、查看响应body是否正确', 1004, 'Password error', '用户名错误']]
I 2022-12-27 23:18:53,873| INFO     | [get_data.py:get_data:read_special_rows_list_excel:160] - 成功从获取第1到4用例,共4条用例
I 2022-12-27 23:18:53,873| INFO     | [get_data.py:get_data:read_special_rows_list_excel:161] - [['验证用户名密码正确登陆成功', '/integration/login', 'post', 'json', '{\n "data": {\n "password": "12345678",\n "userName": "root"\n }\n}', '1、正确输入接口地址 2、正确输入请求参数 3、查看响应body是否正确', 0, '登录成功', 1], ['验证用户名错误登陆失败', '/integration/login', 'post', 'json', '{\n "data": {\n "password": "12345678",\n "userName": "oot"\n }\n}', '1、正确输入接口地址 2、正确输入请求参数 3、查看响应body是否正确', 501, '用户名或口令错误', 1], ['验证密码错误登陆失败', '/integration/login', 'post', 'json', '{\n "data": {\n "password": "1234578",\n "userName": "root"\n }\n}', '1、正确输入接口地址 2、正确输入请求参数 3、查看响应body是否正确', 501, '用户名或口令错误', 1], ['验证用户名密码都错误登陆失败', '/integration/login', 'post', 'json', '{\n "data": {\n "password": "1234678",\n "userName": "rot"\n }\n}', '1、正确输入接口地址 2、正确输入请求参数 3、查看响应body是否正确', 501, '用户名或口令错误', 1]]
I 2022-12-27 23:18:53,894| INFO     | [get_data.py:get_data:read_special_list_excel:137] - 成功获取注册signup所有用例，共11条用例
I 2022-12-27 23:18:53,894| INFO     | [get_data.py:get_data:read_special_list_excel:138] - [['signup_01', '测试成功注册', '/apitest/signup/', 'post', 'json', "{'username':'test06','password':'123456','confirm':'123456','name':'成功注册用户'}", '1、正确输入接口地址 2、正确输入请求参数 3、查看响应body是否正确', "{'Status':1000,'Result':'Success','Message':'注册成功'}", 'users, info', "select count(*),(select count(*) from info where name='成功注册用户') from users where username='test06' and password=md5('123456')", '(1,1)'], ['signup_02', '测试用户名为空', '/apitest/signup/', 'post', 'json', "{'username':'','password':'123456','confirm':'123456','name':'注册用户名为空用户'}", '1、正确输入接口地址 2、正确输入请求参数 3、查看响应body是否正确', "{'Status':1001,'Result':'Username is null','Message':'注册失败，用户名不能为空'}", 'users, info', "select count(*),(select count(*) from info where name='注册用户名为空用户') from users where username='' and password=md5('123456')", '(0,0)'], ['signup_03', '测试密码为空', '/apitest/signup/', 'post', 'json', "{'username':'test07','password':'','confirm':'123456','name':'注册密码为空用户'}", '1、正确输入接口地址 2、正确输入请求参数 3、查看响应body是否正确', "{'Status':1002,'Result':'Password is null','Message':'注册失败，密码不能为空'}", 'users, info', "select count(*),(select count(*) from info where name='注册密码为空用户') from users where username='test07' and password=md5('')", '(0,0)'], ['signup_04', '测试确认密码为空', '/apitest/signup/', 'post', 'json', "{'username':'test08','password':'123456','confirm':'','name':'注册确认密码为空用户'}", '1、正确输入接口地址 2、正确输入请求参数 3、查看响应body是否正确', "{'Status':1003,'Result':'Confirm password is null','Message':'注册失败，确认密码不能为空'}", 'users, info', "select count(*),(select count(*) from info where name='注册确认密码为空用户') from users where username='test08' and password=md5('123456')", '(1,1)'], ['signup_05', '测试姓名为空', '/apitest/signup/', 'post', 'json', "{'username':'test09','password':'123456','confirm':'123456','name':''}", '1、正确输入接口地址 2、正确输入请求参数 3、查看响应body是否正确', "{'Status':1004,'Result':'Name is null','Message':'注册失败，姓名不能为空'}", 'users, info', "select count(*),(select count(*) from info where name='') from users where username='test09' and password=md5('123456')", '(0,0)'], ['signup_06', '测试参数全为空', '/apitest/signup/', 'post', 'json', "{'username':'','password':'','confirm':'','name':''}", '1、正确输入接口地址 2、正确输入请求参数 3、查看响应body是否正确', "{'Status':1001,'Result':'Username is null','Message':'注册失败，用户名不能为空'}", 'users, info', "select count(*),(select count(*) from info where name='') from users where username='' and password=md5('')", '(0,0)'], ['signup_07', '测试两个密码不一致', '/apitest/signup/', 'post', 'json', "{'username':'test10','password':'123456','confirm':'123','name':'注册两个密码不一致用户'}", '1、正确输入接口地址 2、正确输入请求参数 3、查看响应body是否正确', "{'Status':1009,'Result':'Confirm password error','Message':'注册失败，两个密码不一致'}", 'users, info', "select count(*),(select count(*) from info where name='注册两个密码不一致用户') from users where username='test10' and password=md5('123456')", '(0,0)'], ['signup_08', '测试用户重复注册', '/apitest/signup/', 'post', 'json', "{'username':'test11','password':'123456','confirm':'123456','name':'重复注册用户'}", '1、正确输入接口地址 2、正确输入请求参数 3、查看响应body是否正确', "{'Status':1010,'Result':'Username test11 is taken','Message':'注册失败，用户名已被占用'}", 'users, info', "select count(*),(select count(*) from info where name='重复注册用户') from users where username='test11' and password=md5('123456')", '(1,1)'], ['signup_09', '测试用户名为中文', '/apitest/signup/', 'post', 'json', '{"username":"阳靖康","password":"123456","confirm":"123456","name":"中文注册用户"}', '1、正确输入接口地址 2、正确输入请求参数 3、查看响应body是否正确', '{"Status":1000,"Result":"Success","Message":"注册成功"}', 'users, info', "select count(*),(select count(*) from info where name='中文注册用户') from users where username='阳靖康' and password=md5('123456')", '(1,1)'], ['signup_10', '测试用户名为特殊字符', '/apitest/signup/', 'post', 'json', '{"username":"%￥#@&*","password":"123456","confirm":"123456","name":"特殊字符用户"}', '1、正确输入接口地址 2、正确输入请求参数 3、查看响应body是否正确', '{"Status":1000,"Result":"Success","Message":"注册成功"}', 'users, info', "select count(*),(select count(*) from info where name='特殊字符用户') from users where username='%￥#@&*' and password=md5('123456')", '(1,1)'], ['signup_10', '测试用户名为特殊字符', '/apitest/signup/', 'post', 'json', '{"username":"test12","password":"阳靖康","confirm":"阳靖康","name":"注册密码为中文"}', '1、正确输入接口地址 2、正确输入请求参数 3、查看响应body是否正确', '{"Status":1000,"Result":"Success","Message":"注册成功"}', 'users, info', "select count(*),(select count(*) from info where name='注册密码为中文') from users where username='阳靖康'", '(1,1)']]
D 2022-12-27 23:18:53,902| DEBUG    | [factory.py:factory:_find_provider_class:95] - Looking for locale `en_US` in provider `faker.providers.address`.
D 2022-12-27 23:18:53,907| DEBUG    | [factory.py:factory:_find_provider_class:114] - Provider `faker.providers.address` has been localized to `en_US`.
D 2022-12-27 23:18:53,911| DEBUG    | [factory.py:factory:_find_provider_class:95] - Looking for locale `en_US` in provider `faker.providers.automotive`.
D 2022-12-27 23:18:53,915| DEBUG    | [factory.py:factory:_find_provider_class:114] - Provider `faker.providers.automotive` has been localized to `en_US`.
D 2022-12-27 23:18:53,916| DEBUG    | [factory.py:factory:_find_provider_class:95] - Looking for locale `en_US` in provider `faker.providers.bank`.
D 2022-12-27 23:18:53,918| DEBUG    | [factory.py:factory:_find_provider_class:105] - Specified locale `en_US` is not available for provider `faker.providers.bank`. Locale reset to `en_GB` for this provider.
D 2022-12-27 23:18:53,919| DEBUG    | [factory.py:factory:_find_provider_class:95] - Looking for locale `en_US` in provider `faker.providers.barcode`.
D 2022-12-27 23:18:53,920| DEBUG    | [factory.py:factory:_find_provider_class:114] - Provider `faker.providers.barcode` has been localized to `en_US`.
D 2022-12-27 23:18:53,922| DEBUG    | [factory.py:factory:_find_provider_class:95] - Looking for locale `en_US` in provider `faker.providers.color`.
D 2022-12-27 23:18:53,924| DEBUG    | [factory.py:factory:_find_provider_class:114] - Provider `faker.providers.color` has been localized to `en_US`.
D 2022-12-27 23:18:53,925| DEBUG    | [factory.py:factory:_find_provider_class:95] - Looking for locale `en_US` in provider `faker.providers.company`.
D 2022-12-27 23:18:53,927| DEBUG    | [factory.py:factory:_find_provider_class:114] - Provider `faker.providers.company` has been localized to `en_US`.
D 2022-12-27 23:18:53,928| DEBUG    | [factory.py:factory:_find_provider_class:95] - Looking for locale `en_US` in provider `faker.providers.credit_card`.
D 2022-12-27 23:18:53,929| DEBUG    | [factory.py:factory:_find_provider_class:114] - Provider `faker.providers.credit_card` has been localized to `en_US`.
D 2022-12-27 23:18:53,930| DEBUG    | [factory.py:factory:_find_provider_class:95] - Looking for locale `en_US` in provider `faker.providers.currency`.
D 2022-12-27 23:18:53,932| DEBUG    | [factory.py:factory:_find_provider_class:114] - Provider `faker.providers.currency` has been localized to `en_US`.
D 2022-12-27 23:18:53,933| DEBUG    | [factory.py:factory:_find_provider_class:95] - Looking for locale `en_US` in provider `faker.providers.date_time`.
D 2022-12-27 23:18:53,935| DEBUG    | [factory.py:factory:_find_provider_class:114] - Provider `faker.providers.date_time` has been localized to `en_US`.
D 2022-12-27 23:18:53,936| DEBUG    | [factory.py:factory:_find_provider_class:125] - Provider `faker.providers.file` does not feature localization. Specified locale `en_US` is not utilized for this provider.
D 2022-12-27 23:18:53,936| DEBUG    | [factory.py:factory:_find_provider_class:95] - Looking for locale `en_US` in provider `faker.providers.geo`.
D 2022-12-27 23:18:53,937| DEBUG    | [factory.py:factory:_find_provider_class:114] - Provider `faker.providers.geo` has been localized to `en_US`.
D 2022-12-27 23:18:53,938| DEBUG    | [factory.py:factory:_find_provider_class:95] - Looking for locale `en_US` in provider `faker.providers.internet`.
D 2022-12-27 23:18:53,941| DEBUG    | [factory.py:factory:_find_provider_class:114] - Provider `faker.providers.internet` has been localized to `en_US`.
D 2022-12-27 23:18:53,942| DEBUG    | [factory.py:factory:_find_provider_class:125] - Provider `faker.providers.isbn` does not feature localization. Specified locale `en_US` is not utilized for this provider.
D 2022-12-27 23:18:53,942| DEBUG    | [factory.py:factory:_find_provider_class:95] - Looking for locale `en_US` in provider `faker.providers.job`.
D 2022-12-27 23:18:53,944| DEBUG    | [factory.py:factory:_find_provider_class:114] - Provider `faker.providers.job` has been localized to `en_US`.
D 2022-12-27 23:18:53,945| DEBUG    | [factory.py:factory:_find_provider_class:95] - Looking for locale `en_US` in provider `faker.providers.lorem`.
D 2022-12-27 23:18:53,947| DEBUG    | [factory.py:factory:_find_provider_class:114] - Provider `faker.providers.lorem` has been localized to `en_US`.
D 2022-12-27 23:18:53,950| DEBUG    | [factory.py:factory:_find_provider_class:95] - Looking for locale `en_US` in provider `faker.providers.misc`.
D 2022-12-27 23:18:53,951| DEBUG    | [factory.py:factory:_find_provider_class:114] - Provider `faker.providers.misc` has been localized to `en_US`.
D 2022-12-27 23:18:53,952| DEBUG    | [factory.py:factory:_find_provider_class:95] - Looking for locale `en_US` in provider `faker.providers.person`.
D 2022-12-27 23:18:53,956| DEBUG    | [factory.py:factory:_find_provider_class:114] - Provider `faker.providers.person` has been localized to `en_US`.
D 2022-12-27 23:18:53,961| DEBUG    | [factory.py:factory:_find_provider_class:95] - Looking for locale `en_US` in provider `faker.providers.phone_number`.
D 2022-12-27 23:18:53,964| DEBUG    | [factory.py:factory:_find_provider_class:114] - Provider `faker.providers.phone_number` has been localized to `en_US`.
D 2022-12-27 23:18:53,966| DEBUG    | [factory.py:factory:_find_provider_class:125] - Provider `faker.providers.profile` does not feature localization. Specified locale `en_US` is not utilized for this provider.
D 2022-12-27 23:18:53,966| DEBUG    | [factory.py:factory:_find_provider_class:125] - Provider `faker.providers.python` does not feature localization. Specified locale `en_US` is not utilized for this provider.
D 2022-12-27 23:18:53,966| DEBUG    | [factory.py:factory:_find_provider_class:95] - Looking for locale `en_US` in provider `faker.providers.ssn`.
D 2022-12-27 23:18:53,969| DEBUG    | [factory.py:factory:_find_provider_class:114] - Provider `faker.providers.ssn` has been localized to `en_US`.
D 2022-12-27 23:18:53,971| DEBUG    | [factory.py:factory:_find_provider_class:125] - Provider `faker.providers.user_agent` does not feature localization. Specified locale `en_US` is not utilized for this provider.
D 2022-12-27 23:18:53,972| DEBUG    | [conf.py:conf:conf_get_db:30] - 读数据库服务器配置文件/Users/yangjingkang/PycharmProjects/YJK_api-master/confs/db.conf成功，数据库信息是{'host': '172.16.9.128', 'db': 'wa_test', 'user': 'root', 'passwd': '123456'}
I 2022-12-27 23:18:53,985| INFO     | [mysql.py:mysql:connect:28] - ===============>成功连接数据库,参数为：{'host': '172.16.9.128', 'db': 'wa_test', 'user': 'root', 'passwd': '123456'}<===================
I 2022-12-27 23:18:53,985| INFO     | [preposition_fixture.py:preposition_fixture:connect_db:29] - *********************开始数据库连接*********************
D 2022-12-27 23:18:53,995| DEBUG    | [connectionpool.py:connectionpool:_new_conn:227] - Starting new HTTP connection (1): 124.223.214.171:8080
I 2022-12-27 23:19:28,746| INFO     | [preposition_fixture.py:preposition_fixture:connect_db:31] - *********************开始关闭数据库连接*********************
D 2022-12-27 23:19:28,746| DEBUG    | [mysql.py:mysql:close_db:165] - ==============================关闭数据库成功===============================
D 2022-12-27 23:20:31,897| DEBUG    | [factory.py:factory:<module>:19] - Not in REPL -> leaving logger event level as is.
I 2022-12-27 23:20:32,346| INFO     | [get_data.py:get_data:read_special_list_excel:137] - 成功获取登录login所有用例，共12条用例
I 2022-12-27 23:20:32,346| INFO     | [get_data.py:get_data:read_special_list_excel:138] - [['测试成功登录', '/apitest/login/', 'post', 'data', "{'username':'test01','password':'123456'}", '1、正确输入接口地址 2、正确输入请求参数 3、查看响应body是否正确', 1000, 'Usercheck ok', '登录验证成功'], ['测试用户名为空', '/apitest/login/', 'post', 'data', "{'username':'','password':'123456'}", '1、正确输入接口地址 2、正确输入请求参数 3、查看响应body是否正确', 1001, 'Username is null', '用户名不能为空'], ['测试密码为空', '/apitest/login/', 'post', 'data', "{'username':'test02','password':''}", '1、正确输入接口地址 2、正确输入请求参数 3、查看响应body是否正确', 1002, 'Password is null', '密码不能为空'], ['测试用户名和密码均为空', '/apitest/login/', 'post', 'data', "{'username':'','password':''}", '1、正确输入接口地址 2、正确输入请求参数 3、查看响应body是否正确', 1001, 'Username is null', '用户名不能为空'], ['测试用户名错误', '/apitest/login/', 'post', 'data', "{'username':'test03','password':'123456'}", '1、正确输入接口地址 2、正确输入请求参数 3、查看响应body是否正确', 1003, 'Username error', '用户名错误'], ['测试密码错误', '/apitest/login/', 'post', 'data', "{'username':'test03','password':'123'}", '1、正确输入接口地址 2、正确输入请求参数 3、查看响应body是否正确', 1003, 'Password error', '密码错误'], ['测试用户名和密码均错误', '/apitest/login/', 'post', 'data', "{'username':'test05','password':'123'}", '1、正确输入接口地址 2、正确输入请求参数 3、查看响应body是否正确', 1003, 'Username error', '用户名错误'], ['测试用户名为中文', '/apitest/login/', 'post', 'data', "{'username':'你好','password':'123456'}", '1、正确输入接口地址 2、正确输入请求参数 3、查看响应body是否正确', 1003, 'Username error', '用户名错误'], ['测试用户名为数字', '/apitest/login/', 'post', 'data', "{'username':'123456','password':'123456'}", '1、正确输入接口地址 2、正确输入请求参数 3、查看响应body是否正确', 1003, 'Username error', '用户名错误'], ['测试密码为无效最大边界值', '/apitest/login/', 'post', 'data', "{'username':'test05','password':'12345678945647898468464'}", '1、正确输入接口地址 2、正确输入请求参数 3、查看响应body是否正确', 1003, 'Username error', '用户名错误'], ['测试用户名为特殊字符', '/apitest/login/', 'post', 'data', "{'username':'*%$','password':'123456'}", '1、正确输入接口地址 2、正确输入请求参数 3、查看响应body是否正确', 1003, 'Username error', '用户名错误'], ['测试密码长度超过限制', '/apitest/login/', 'post', 'data', "{'username':'test15','password':'123456784948494848484486486486'}", '1、正确输入接口地址 2、正确输入请求参数 3、查看响应body是否正确', 1004, 'Password error', '用户名错误']]
I 2022-12-27 23:20:32,370| INFO     | [get_data.py:get_data:read_special_rows_list_excel:160] - 成功从获取第12到12用例,共1条用例
I 2022-12-27 23:20:32,371| INFO     | [get_data.py:get_data:read_special_rows_list_excel:161] - [['测试密码长度超过限制', '/apitest/login/', 'post', '1、正确输入接口地址 2、正确输入请求参数 3、查看响应body是否正确', 1004, 'Password error', '用户名错误']]
I 2022-12-27 23:20:32,399| INFO     | [get_data.py:get_data:read_special_rows_list_excel:160] - 成功从获取第1到4用例,共4条用例
I 2022-12-27 23:20:32,399| INFO     | [get_data.py:get_data:read_special_rows_list_excel:161] - [['验证用户名密码正确登陆成功', '/integration/login', 'post', 'json', '{\n "data": {\n "password": "12345678",\n "userName": "root"\n }\n}', '1、正确输入接口地址 2、正确输入请求参数 3、查看响应body是否正确', 0, '登录成功', 1], ['验证用户名错误登陆失败', '/integration/login', 'post', 'json', '{\n "data": {\n "password": "12345678",\n "userName": "oot"\n }\n}', '1、正确输入接口地址 2、正确输入请求参数 3、查看响应body是否正确', 501, '用户名或口令错误', 1], ['验证密码错误登陆失败', '/integration/login', 'post', 'json', '{\n "data": {\n "password": "1234578",\n "userName": "root"\n }\n}', '1、正确输入接口地址 2、正确输入请求参数 3、查看响应body是否正确', 501, '用户名或口令错误', 1], ['验证用户名密码都错误登陆失败', '/integration/login', 'post', 'json', '{\n "data": {\n "password": "1234678",\n "userName": "rot"\n }\n}', '1、正确输入接口地址 2、正确输入请求参数 3、查看响应body是否正确', 501, '用户名或口令错误', 1]]
I 2022-12-27 23:20:32,425| INFO     | [get_data.py:get_data:read_special_list_excel:137] - 成功获取注册signup所有用例，共11条用例
I 2022-12-27 23:20:32,426| INFO     | [get_data.py:get_data:read_special_list_excel:138] - [['signup_01', '测试成功注册', '/apitest/signup/', 'post', 'json', "{'username':'test06','password':'123456','confirm':'123456','name':'成功注册用户'}", '1、正确输入接口地址 2、正确输入请求参数 3、查看响应body是否正确', "{'Status':1000,'Result':'Success','Message':'注册成功'}", 'users, info', "select count(*),(select count(*) from info where name='成功注册用户') from users where username='test06' and password=md5('123456')", '(1,1)'], ['signup_02', '测试用户名为空', '/apitest/signup/', 'post', 'json', "{'username':'','password':'123456','confirm':'123456','name':'注册用户名为空用户'}", '1、正确输入接口地址 2、正确输入请求参数 3、查看响应body是否正确', "{'Status':1001,'Result':'Username is null','Message':'注册失败，用户名不能为空'}", 'users, info', "select count(*),(select count(*) from info where name='注册用户名为空用户') from users where username='' and password=md5('123456')", '(0,0)'], ['signup_03', '测试密码为空', '/apitest/signup/', 'post', 'json', "{'username':'test07','password':'','confirm':'123456','name':'注册密码为空用户'}", '1、正确输入接口地址 2、正确输入请求参数 3、查看响应body是否正确', "{'Status':1002,'Result':'Password is null','Message':'注册失败，密码不能为空'}", 'users, info', "select count(*),(select count(*) from info where name='注册密码为空用户') from users where username='test07' and password=md5('')", '(0,0)'], ['signup_04', '测试确认密码为空', '/apitest/signup/', 'post', 'json', "{'username':'test08','password':'123456','confirm':'','name':'注册确认密码为空用户'}", '1、正确输入接口地址 2、正确输入请求参数 3、查看响应body是否正确', "{'Status':1003,'Result':'Confirm password is null','Message':'注册失败，确认密码不能为空'}", 'users, info', "select count(*),(select count(*) from info where name='注册确认密码为空用户') from users where username='test08' and password=md5('123456')", '(1,1)'], ['signup_05', '测试姓名为空', '/apitest/signup/', 'post', 'json', "{'username':'test09','password':'123456','confirm':'123456','name':''}", '1、正确输入接口地址 2、正确输入请求参数 3、查看响应body是否正确', "{'Status':1004,'Result':'Name is null','Message':'注册失败，姓名不能为空'}", 'users, info', "select count(*),(select count(*) from info where name='') from users where username='test09' and password=md5('123456')", '(0,0)'], ['signup_06', '测试参数全为空', '/apitest/signup/', 'post', 'json', "{'username':'','password':'','confirm':'','name':''}", '1、正确输入接口地址 2、正确输入请求参数 3、查看响应body是否正确', "{'Status':1001,'Result':'Username is null','Message':'注册失败，用户名不能为空'}", 'users, info', "select count(*),(select count(*) from info where name='') from users where username='' and password=md5('')", '(0,0)'], ['signup_07', '测试两个密码不一致', '/apitest/signup/', 'post', 'json', "{'username':'test10','password':'123456','confirm':'123','name':'注册两个密码不一致用户'}", '1、正确输入接口地址 2、正确输入请求参数 3、查看响应body是否正确', "{'Status':1009,'Result':'Confirm password error','Message':'注册失败，两个密码不一致'}", 'users, info', "select count(*),(select count(*) from info where name='注册两个密码不一致用户') from users where username='test10' and password=md5('123456')", '(0,0)'], ['signup_08', '测试用户重复注册', '/apitest/signup/', 'post', 'json', "{'username':'test11','password':'123456','confirm':'123456','name':'重复注册用户'}", '1、正确输入接口地址 2、正确输入请求参数 3、查看响应body是否正确', "{'Status':1010,'Result':'Username test11 is taken','Message':'注册失败，用户名已被占用'}", 'users, info', "select count(*),(select count(*) from info where name='重复注册用户') from users where username='test11' and password=md5('123456')", '(1,1)'], ['signup_09', '测试用户名为中文', '/apitest/signup/', 'post', 'json', '{"username":"阳靖康","password":"123456","confirm":"123456","name":"中文注册用户"}', '1、正确输入接口地址 2、正确输入请求参数 3、查看响应body是否正确', '{"Status":1000,"Result":"Success","Message":"注册成功"}', 'users, info', "select count(*),(select count(*) from info where name='中文注册用户') from users where username='阳靖康' and password=md5('123456')", '(1,1)'], ['signup_10', '测试用户名为特殊字符', '/apitest/signup/', 'post', 'json', '{"username":"%￥#@&*","password":"123456","confirm":"123456","name":"特殊字符用户"}', '1、正确输入接口地址 2、正确输入请求参数 3、查看响应body是否正确', '{"Status":1000,"Result":"Success","Message":"注册成功"}', 'users, info', "select count(*),(select count(*) from info where name='特殊字符用户') from users where username='%￥#@&*' and password=md5('123456')", '(1,1)'], ['signup_10', '测试用户名为特殊字符', '/apitest/signup/', 'post', 'json', '{"username":"test12","password":"阳靖康","confirm":"阳靖康","name":"注册密码为中文"}', '1、正确输入接口地址 2、正确输入请求参数 3、查看响应body是否正确', '{"Status":1000,"Result":"Success","Message":"注册成功"}', 'users, info', "select count(*),(select count(*) from info where name='注册密码为中文') from users where username='阳靖康'", '(1,1)']]
D 2022-12-27 23:20:32,433| DEBUG    | [factory.py:factory:_find_provider_class:95] - Looking for locale `en_US` in provider `faker.providers.address`.
D 2022-12-27 23:20:32,436| DEBUG    | [factory.py:factory:_find_provider_class:114] - Provider `faker.providers.address` has been localized to `en_US`.
D 2022-12-27 23:20:32,439| DEBUG    | [factory.py:factory:_find_provider_class:95] - Looking for locale `en_US` in provider `faker.providers.automotive`.
D 2022-12-27 23:20:32,443| DEBUG    | [factory.py:factory:_find_provider_class:114] - Provider `faker.providers.automotive` has been localized to `en_US`.
D 2022-12-27 23:20:32,444| DEBUG    | [factory.py:factory:_find_provider_class:95] - Looking for locale `en_US` in provider `faker.providers.bank`.
D 2022-12-27 23:20:32,447| DEBUG    | [factory.py:factory:_find_provider_class:105] - Specified locale `en_US` is not available for provider `faker.providers.bank`. Locale reset to `en_GB` for this provider.
D 2022-12-27 23:20:32,449| DEBUG    | [factory.py:factory:_find_provider_class:95] - Looking for locale `en_US` in provider `faker.providers.barcode`.
D 2022-12-27 23:20:32,450| DEBUG    | [factory.py:factory:_find_provider_class:114] - Provider `faker.providers.barcode` has been localized to `en_US`.
D 2022-12-27 23:20:32,453| DEBUG    | [factory.py:factory:_find_provider_class:95] - Looking for locale `en_US` in provider `faker.providers.color`.
D 2022-12-27 23:20:32,455| DEBUG    | [factory.py:factory:_find_provider_class:114] - Provider `faker.providers.color` has been localized to `en_US`.
D 2022-12-27 23:20:32,456| DEBUG    | [factory.py:factory:_find_provider_class:95] - Looking for locale `en_US` in provider `faker.providers.company`.
D 2022-12-27 23:20:32,459| DEBUG    | [factory.py:factory:_find_provider_class:114] - Provider `faker.providers.company` has been localized to `en_US`.
D 2022-12-27 23:20:32,460| DEBUG    | [factory.py:factory:_find_provider_class:95] - Looking for locale `en_US` in provider `faker.providers.credit_card`.
D 2022-12-27 23:20:32,461| DEBUG    | [factory.py:factory:_find_provider_class:114] - Provider `faker.providers.credit_card` has been localized to `en_US`.
D 2022-12-27 23:20:32,463| DEBUG    | [factory.py:factory:_find_provider_class:95] - Looking for locale `en_US` in provider `faker.providers.currency`.
D 2022-12-27 23:20:32,465| DEBUG    | [factory.py:factory:_find_provider_class:114] - Provider `faker.providers.currency` has been localized to `en_US`.
D 2022-12-27 23:20:32,466| DEBUG    | [factory.py:factory:_find_provider_class:95] - Looking for locale `en_US` in provider `faker.providers.date_time`.
D 2022-12-27 23:20:32,469| DEBUG    | [factory.py:factory:_find_provider_class:114] - Provider `faker.providers.date_time` has been localized to `en_US`.
D 2022-12-27 23:20:32,470| DEBUG    | [factory.py:factory:_find_provider_class:125] - Provider `faker.providers.file` does not feature localization. Specified locale `en_US` is not utilized for this provider.
D 2022-12-27 23:20:32,471| DEBUG    | [factory.py:factory:_find_provider_class:95] - Looking for locale `en_US` in provider `faker.providers.geo`.
D 2022-12-27 23:20:32,472| DEBUG    | [factory.py:factory:_find_provider_class:114] - Provider `faker.providers.geo` has been localized to `en_US`.
D 2022-12-27 23:20:32,473| DEBUG    | [factory.py:factory:_find_provider_class:95] - Looking for locale `en_US` in provider `faker.providers.internet`.
D 2022-12-27 23:20:32,476| DEBUG    | [factory.py:factory:_find_provider_class:114] - Provider `faker.providers.internet` has been localized to `en_US`.
D 2022-12-27 23:20:32,478| DEBUG    | [factory.py:factory:_find_provider_class:125] - Provider `faker.providers.isbn` does not feature localization. Specified locale `en_US` is not utilized for this provider.
D 2022-12-27 23:20:32,479| DEBUG    | [factory.py:factory:_find_provider_class:95] - Looking for locale `en_US` in provider `faker.providers.job`.
D 2022-12-27 23:20:32,482| DEBUG    | [factory.py:factory:_find_provider_class:114] - Provider `faker.providers.job` has been localized to `en_US`.
D 2022-12-27 23:20:32,484| DEBUG    | [factory.py:factory:_find_provider_class:95] - Looking for locale `en_US` in provider `faker.providers.lorem`.
D 2022-12-27 23:20:32,485| DEBUG    | [factory.py:factory:_find_provider_class:114] - Provider `faker.providers.lorem` has been localized to `en_US`.
D 2022-12-27 23:20:32,488| DEBUG    | [factory.py:factory:_find_provider_class:95] - Looking for locale `en_US` in provider `faker.providers.misc`.
D 2022-12-27 23:20:32,488| DEBUG    | [factory.py:factory:_find_provider_class:114] - Provider `faker.providers.misc` has been localized to `en_US`.
D 2022-12-27 23:20:32,489| DEBUG    | [factory.py:factory:_find_provider_class:95] - Looking for locale `en_US` in provider `faker.providers.person`.
D 2022-12-27 23:20:32,494| DEBUG    | [factory.py:factory:_find_provider_class:114] - Provider `faker.providers.person` has been localized to `en_US`.
D 2022-12-27 23:20:32,500| DEBUG    | [factory.py:factory:_find_provider_class:95] - Looking for locale `en_US` in provider `faker.providers.phone_number`.
D 2022-12-27 23:20:32,504| DEBUG    | [factory.py:factory:_find_provider_class:114] - Provider `faker.providers.phone_number` has been localized to `en_US`.
D 2022-12-27 23:20:32,505| DEBUG    | [factory.py:factory:_find_provider_class:125] - Provider `faker.providers.profile` does not feature localization. Specified locale `en_US` is not utilized for this provider.
D 2022-12-27 23:20:32,505| DEBUG    | [factory.py:factory:_find_provider_class:125] - Provider `faker.providers.python` does not feature localization. Specified locale `en_US` is not utilized for this provider.
D 2022-12-27 23:20:32,505| DEBUG    | [factory.py:factory:_find_provider_class:95] - Looking for locale `en_US` in provider `faker.providers.ssn`.
D 2022-12-27 23:20:32,510| DEBUG    | [factory.py:factory:_find_provider_class:114] - Provider `faker.providers.ssn` has been localized to `en_US`.
D 2022-12-27 23:20:32,511| DEBUG    | [factory.py:factory:_find_provider_class:125] - Provider `faker.providers.user_agent` does not feature localization. Specified locale `en_US` is not utilized for this provider.
D 2022-12-27 23:20:32,512| DEBUG    | [conf.py:conf:conf_get_db:30] - 读数据库服务器配置文件/Users/yangjingkang/PycharmProjects/YJK_api-master/confs/db.conf成功，数据库信息是{'host': '172.16.9.128', 'db': 'wa_test', 'user': 'root', 'passwd': '123456'}
I 2022-12-27 23:20:32,517| INFO     | [mysql.py:mysql:connect:28] - ===============>成功连接数据库,参数为：{'host': '172.16.9.128', 'db': 'wa_test', 'user': 'root', 'passwd': '123456'}<===================
I 2022-12-27 23:20:32,517| INFO     | [preposition_fixture.py:preposition_fixture:connect_db:29] - *********************开始数据库连接*********************
D 2022-12-27 23:20:32,524| DEBUG    | [connectionpool.py:connectionpool:_new_conn:227] - Starting new HTTP connection (1): 124.223.214.171:8080
I 2022-12-27 23:21:46,347| INFO     | [preposition_fixture.py:preposition_fixture:connect_db:31] - *********************开始关闭数据库连接*********************
D 2022-12-27 23:21:46,348| DEBUG    | [mysql.py:mysql:close_db:165] - ==============================关闭数据库成功===============================
I 2022-12-27 23:21:53,175| INFO     | [email_manage.py:email_manage:send_mail:52] - ==============================发送报告成功==============================
D 2022-12-27 23:23:06,075| DEBUG    | [factory.py:factory:<module>:19] - Not in REPL -> leaving logger event level as is.
I 2022-12-27 23:23:06,500| INFO     | [get_data.py:get_data:read_special_list_excel:137] - 成功获取登录login所有用例，共12条用例
I 2022-12-27 23:23:06,501| INFO     | [get_data.py:get_data:read_special_list_excel:138] - [['测试成功登录', '/apitest/login/', 'post', 'data', "{'username':'test01','password':'123456'}", '1、正确输入接口地址 2、正确输入请求参数 3、查看响应body是否正确', 1000, 'Usercheck ok', '登录验证成功'], ['测试用户名为空', '/apitest/login/', 'post', 'data', "{'username':'','password':'123456'}", '1、正确输入接口地址 2、正确输入请求参数 3、查看响应body是否正确', 1001, 'Username is null', '用户名不能为空'], ['测试密码为空', '/apitest/login/', 'post', 'data', "{'username':'test02','password':''}", '1、正确输入接口地址 2、正确输入请求参数 3、查看响应body是否正确', 1002, 'Password is null', '密码不能为空'], ['测试用户名和密码均为空', '/apitest/login/', 'post', 'data', "{'username':'','password':''}", '1、正确输入接口地址 2、正确输入请求参数 3、查看响应body是否正确', 1001, 'Username is null', '用户名不能为空'], ['测试用户名错误', '/apitest/login/', 'post', 'data', "{'username':'test03','password':'123456'}", '1、正确输入接口地址 2、正确输入请求参数 3、查看响应body是否正确', 1003, 'Username error', '用户名错误'], ['测试密码错误', '/apitest/login/', 'post', 'data', "{'username':'test03','password':'123'}", '1、正确输入接口地址 2、正确输入请求参数 3、查看响应body是否正确', 1003, 'Password error', '密码错误'], ['测试用户名和密码均错误', '/apitest/login/', 'post', 'data', "{'username':'test05','password':'123'}", '1、正确输入接口地址 2、正确输入请求参数 3、查看响应body是否正确', 1003, 'Username error', '用户名错误'], ['测试用户名为中文', '/apitest/login/', 'post', 'data', "{'username':'你好','password':'123456'}", '1、正确输入接口地址 2、正确输入请求参数 3、查看响应body是否正确', 1003, 'Username error', '用户名错误'], ['测试用户名为数字', '/apitest/login/', 'post', 'data', "{'username':'123456','password':'123456'}", '1、正确输入接口地址 2、正确输入请求参数 3、查看响应body是否正确', 1003, 'Username error', '用户名错误'], ['测试密码为无效最大边界值', '/apitest/login/', 'post', 'data', "{'username':'test05','password':'12345678945647898468464'}", '1、正确输入接口地址 2、正确输入请求参数 3、查看响应body是否正确', 1003, 'Username error', '用户名错误'], ['测试用户名为特殊字符', '/apitest/login/', 'post', 'data', "{'username':'*%$','password':'123456'}", '1、正确输入接口地址 2、正确输入请求参数 3、查看响应body是否正确', 1003, 'Username error', '用户名错误'], ['测试密码长度超过限制', '/apitest/login/', 'post', 'data', "{'username':'test15','password':'123456784948494848484486486486'}", '1、正确输入接口地址 2、正确输入请求参数 3、查看响应body是否正确', 1004, 'Password error', '用户名错误']]
I 2022-12-27 23:23:06,527| INFO     | [get_data.py:get_data:read_special_rows_list_excel:160] - 成功从获取第12到12用例,共1条用例
I 2022-12-27 23:23:06,528| INFO     | [get_data.py:get_data:read_special_rows_list_excel:161] - [['测试密码长度超过限制', '/apitest/login/', 'post', '1、正确输入接口地址 2、正确输入请求参数 3、查看响应body是否正确', 1004, 'Password error', '用户名错误']]
I 2022-12-27 23:23:06,552| INFO     | [get_data.py:get_data:read_special_rows_list_excel:160] - 成功从获取第1到4用例,共4条用例
I 2022-12-27 23:23:06,552| INFO     | [get_data.py:get_data:read_special_rows_list_excel:161] - [['验证用户名密码正确登陆成功', '/integration/login', 'post', 'json', '{\n "data": {\n "password": "12345678",\n "userName": "root"\n }\n}', '1、正确输入接口地址 2、正确输入请求参数 3、查看响应body是否正确', 0, '登录成功', 1], ['验证用户名错误登陆失败', '/integration/login', 'post', 'json', '{\n "data": {\n "password": "12345678",\n "userName": "oot"\n }\n}', '1、正确输入接口地址 2、正确输入请求参数 3、查看响应body是否正确', 501, '用户名或口令错误', 1], ['验证密码错误登陆失败', '/integration/login', 'post', 'json', '{\n "data": {\n "password": "1234578",\n "userName": "root"\n }\n}', '1、正确输入接口地址 2、正确输入请求参数 3、查看响应body是否正确', 501, '用户名或口令错误', 1], ['验证用户名密码都错误登陆失败', '/integration/login', 'post', 'json', '{\n "data": {\n "password": "1234678",\n "userName": "rot"\n }\n}', '1、正确输入接口地址 2、正确输入请求参数 3、查看响应body是否正确', 501, '用户名或口令错误', 1]]
I 2022-12-27 23:23:06,576| INFO     | [get_data.py:get_data:read_special_list_excel:137] - 成功获取注册signup所有用例，共11条用例
I 2022-12-27 23:23:06,576| INFO     | [get_data.py:get_data:read_special_list_excel:138] - [['signup_01', '测试成功注册', '/apitest/signup/', 'post', 'json', "{'username':'test06','password':'123456','confirm':'123456','name':'成功注册用户'}", '1、正确输入接口地址 2、正确输入请求参数 3、查看响应body是否正确', "{'Status':1000,'Result':'Success','Message':'注册成功'}", 'users, info', "select count(*),(select count(*) from info where name='成功注册用户') from users where username='test06' and password=md5('123456')", '(1,1)'], ['signup_02', '测试用户名为空', '/apitest/signup/', 'post', 'json', "{'username':'','password':'123456','confirm':'123456','name':'注册用户名为空用户'}", '1、正确输入接口地址 2、正确输入请求参数 3、查看响应body是否正确', "{'Status':1001,'Result':'Username is null','Message':'注册失败，用户名不能为空'}", 'users, info', "select count(*),(select count(*) from info where name='注册用户名为空用户') from users where username='' and password=md5('123456')", '(0,0)'], ['signup_03', '测试密码为空', '/apitest/signup/', 'post', 'json', "{'username':'test07','password':'','confirm':'123456','name':'注册密码为空用户'}", '1、正确输入接口地址 2、正确输入请求参数 3、查看响应body是否正确', "{'Status':1002,'Result':'Password is null','Message':'注册失败，密码不能为空'}", 'users, info', "select count(*),(select count(*) from info where name='注册密码为空用户') from users where username='test07' and password=md5('')", '(0,0)'], ['signup_04', '测试确认密码为空', '/apitest/signup/', 'post', 'json', "{'username':'test08','password':'123456','confirm':'','name':'注册确认密码为空用户'}", '1、正确输入接口地址 2、正确输入请求参数 3、查看响应body是否正确', "{'Status':1003,'Result':'Confirm password is null','Message':'注册失败，确认密码不能为空'}", 'users, info', "select count(*),(select count(*) from info where name='注册确认密码为空用户') from users where username='test08' and password=md5('123456')", '(1,1)'], ['signup_05', '测试姓名为空', '/apitest/signup/', 'post', 'json', "{'username':'test09','password':'123456','confirm':'123456','name':''}", '1、正确输入接口地址 2、正确输入请求参数 3、查看响应body是否正确', "{'Status':1004,'Result':'Name is null','Message':'注册失败，姓名不能为空'}", 'users, info', "select count(*),(select count(*) from info where name='') from users where username='test09' and password=md5('123456')", '(0,0)'], ['signup_06', '测试参数全为空', '/apitest/signup/', 'post', 'json', "{'username':'','password':'','confirm':'','name':''}", '1、正确输入接口地址 2、正确输入请求参数 3、查看响应body是否正确', "{'Status':1001,'Result':'Username is null','Message':'注册失败，用户名不能为空'}", 'users, info', "select count(*),(select count(*) from info where name='') from users where username='' and password=md5('')", '(0,0)'], ['signup_07', '测试两个密码不一致', '/apitest/signup/', 'post', 'json', "{'username':'test10','password':'123456','confirm':'123','name':'注册两个密码不一致用户'}", '1、正确输入接口地址 2、正确输入请求参数 3、查看响应body是否正确', "{'Status':1009,'Result':'Confirm password error','Message':'注册失败，两个密码不一致'}", 'users, info', "select count(*),(select count(*) from info where name='注册两个密码不一致用户') from users where username='test10' and password=md5('123456')", '(0,0)'], ['signup_08', '测试用户重复注册', '/apitest/signup/', 'post', 'json', "{'username':'test11','password':'123456','confirm':'123456','name':'重复注册用户'}", '1、正确输入接口地址 2、正确输入请求参数 3、查看响应body是否正确', "{'Status':1010,'Result':'Username test11 is taken','Message':'注册失败，用户名已被占用'}", 'users, info', "select count(*),(select count(*) from info where name='重复注册用户') from users where username='test11' and password=md5('123456')", '(1,1)'], ['signup_09', '测试用户名为中文', '/apitest/signup/', 'post', 'json', '{"username":"阳靖康","password":"123456","confirm":"123456","name":"中文注册用户"}', '1、正确输入接口地址 2、正确输入请求参数 3、查看响应body是否正确', '{"Status":1000,"Result":"Success","Message":"注册成功"}', 'users, info', "select count(*),(select count(*) from info where name='中文注册用户') from users where username='阳靖康' and password=md5('123456')", '(1,1)'], ['signup_10', '测试用户名为特殊字符', '/apitest/signup/', 'post', 'json', '{"username":"%￥#@&*","password":"123456","confirm":"123456","name":"特殊字符用户"}', '1、正确输入接口地址 2、正确输入请求参数 3、查看响应body是否正确', '{"Status":1000,"Result":"Success","Message":"注册成功"}', 'users, info', "select count(*),(select count(*) from info where name='特殊字符用户') from users where username='%￥#@&*' and password=md5('123456')", '(1,1)'], ['signup_10', '测试用户名为特殊字符', '/apitest/signup/', 'post', 'json', '{"username":"test12","password":"阳靖康","confirm":"阳靖康","name":"注册密码为中文"}', '1、正确输入接口地址 2、正确输入请求参数 3、查看响应body是否正确', '{"Status":1000,"Result":"Success","Message":"注册成功"}', 'users, info', "select count(*),(select count(*) from info where name='注册密码为中文') from users where username='阳靖康'", '(1,1)']]
D 2022-12-27 23:23:06,582| DEBUG    | [factory.py:factory:_find_provider_class:95] - Looking for locale `en_US` in provider `faker.providers.address`.
D 2022-12-27 23:23:06,586| DEBUG    | [factory.py:factory:_find_provider_class:114] - Provider `faker.providers.address` has been localized to `en_US`.
D 2022-12-27 23:23:06,589| DEBUG    | [factory.py:factory:_find_provider_class:95] - Looking for locale `en_US` in provider `faker.providers.automotive`.
D 2022-12-27 23:23:06,592| DEBUG    | [factory.py:factory:_find_provider_class:114] - Provider `faker.providers.automotive` has been localized to `en_US`.
D 2022-12-27 23:23:06,594| DEBUG    | [factory.py:factory:_find_provider_class:95] - Looking for locale `en_US` in provider `faker.providers.bank`.
D 2022-12-27 23:23:06,596| DEBUG    | [factory.py:factory:_find_provider_class:105] - Specified locale `en_US` is not available for provider `faker.providers.bank`. Locale reset to `en_GB` for this provider.
D 2022-12-27 23:23:06,597| DEBUG    | [factory.py:factory:_find_provider_class:95] - Looking for locale `en_US` in provider `faker.providers.barcode`.
D 2022-12-27 23:23:06,598| DEBUG    | [factory.py:factory:_find_provider_class:114] - Provider `faker.providers.barcode` has been localized to `en_US`.
D 2022-12-27 23:23:06,600| DEBUG    | [factory.py:factory:_find_provider_class:95] - Looking for locale `en_US` in provider `faker.providers.color`.
D 2022-12-27 23:23:06,601| DEBUG    | [factory.py:factory:_find_provider_class:114] - Provider `faker.providers.color` has been localized to `en_US`.
D 2022-12-27 23:23:06,602| DEBUG    | [factory.py:factory:_find_provider_class:95] - Looking for locale `en_US` in provider `faker.providers.company`.
D 2022-12-27 23:23:06,605| DEBUG    | [factory.py:factory:_find_provider_class:114] - Provider `faker.providers.company` has been localized to `en_US`.
D 2022-12-27 23:23:06,606| DEBUG    | [factory.py:factory:_find_provider_class:95] - Looking for locale `en_US` in provider `faker.providers.credit_card`.
D 2022-12-27 23:23:06,607| DEBUG    | [factory.py:factory:_find_provider_class:114] - Provider `faker.providers.credit_card` has been localized to `en_US`.
D 2022-12-27 23:23:06,608| DEBUG    | [factory.py:factory:_find_provider_class:95] - Looking for locale `en_US` in provider `faker.providers.currency`.
D 2022-12-27 23:23:06,610| DEBUG    | [factory.py:factory:_find_provider_class:114] - Provider `faker.providers.currency` has been localized to `en_US`.
D 2022-12-27 23:23:06,611| DEBUG    | [factory.py:factory:_find_provider_class:95] - Looking for locale `en_US` in provider `faker.providers.date_time`.
D 2022-12-27 23:23:06,613| DEBUG    | [factory.py:factory:_find_provider_class:114] - Provider `faker.providers.date_time` has been localized to `en_US`.
D 2022-12-27 23:23:06,614| DEBUG    | [factory.py:factory:_find_provider_class:125] - Provider `faker.providers.file` does not feature localization. Specified locale `en_US` is not utilized for this provider.
D 2022-12-27 23:23:06,614| DEBUG    | [factory.py:factory:_find_provider_class:95] - Looking for locale `en_US` in provider `faker.providers.geo`.
D 2022-12-27 23:23:06,615| DEBUG    | [factory.py:factory:_find_provider_class:114] - Provider `faker.providers.geo` has been localized to `en_US`.
D 2022-12-27 23:23:06,616| DEBUG    | [factory.py:factory:_find_provider_class:95] - Looking for locale `en_US` in provider `faker.providers.internet`.
D 2022-12-27 23:23:06,619| DEBUG    | [factory.py:factory:_find_provider_class:114] - Provider `faker.providers.internet` has been localized to `en_US`.
D 2022-12-27 23:23:06,620| DEBUG    | [factory.py:factory:_find_provider_class:125] - Provider `faker.providers.isbn` does not feature localization. Specified locale `en_US` is not utilized for this provider.
D 2022-12-27 23:23:06,620| DEBUG    | [factory.py:factory:_find_provider_class:95] - Looking for locale `en_US` in provider `faker.providers.job`.
D 2022-12-27 23:23:06,622| DEBUG    | [factory.py:factory:_find_provider_class:114] - Provider `faker.providers.job` has been localized to `en_US`.
D 2022-12-27 23:23:06,624| DEBUG    | [factory.py:factory:_find_provider_class:95] - Looking for locale `en_US` in provider `faker.providers.lorem`.
D 2022-12-27 23:23:06,625| DEBUG    | [factory.py:factory:_find_provider_class:114] - Provider `faker.providers.lorem` has been localized to `en_US`.
D 2022-12-27 23:23:06,627| DEBUG    | [factory.py:factory:_find_provider_class:95] - Looking for locale `en_US` in provider `faker.providers.misc`.
D 2022-12-27 23:23:06,628| DEBUG    | [factory.py:factory:_find_provider_class:114] - Provider `faker.providers.misc` has been localized to `en_US`.
D 2022-12-27 23:23:06,629| DEBUG    | [factory.py:factory:_find_provider_class:95] - Looking for locale `en_US` in provider `faker.providers.person`.
D 2022-12-27 23:23:06,633| DEBUG    | [factory.py:factory:_find_provider_class:114] - Provider `faker.providers.person` has been localized to `en_US`.
D 2022-12-27 23:23:06,637| DEBUG    | [factory.py:factory:_find_provider_class:95] - Looking for locale `en_US` in provider `faker.providers.phone_number`.
D 2022-12-27 23:23:06,641| DEBUG    | [factory.py:factory:_find_provider_class:114] - Provider `faker.providers.phone_number` has been localized to `en_US`.
D 2022-12-27 23:23:06,642| DEBUG    | [factory.py:factory:_find_provider_class:125] - Provider `faker.providers.profile` does not feature localization. Specified locale `en_US` is not utilized for this provider.
D 2022-12-27 23:23:06,642| DEBUG    | [factory.py:factory:_find_provider_class:125] - Provider `faker.providers.python` does not feature localization. Specified locale `en_US` is not utilized for this provider.
D 2022-12-27 23:23:06,642| DEBUG    | [factory.py:factory:_find_provider_class:95] - Looking for locale `en_US` in provider `faker.providers.ssn`.
D 2022-12-27 23:23:06,646| DEBUG    | [factory.py:factory:_find_provider_class:114] - Provider `faker.providers.ssn` has been localized to `en_US`.
D 2022-12-27 23:23:06,647| DEBUG    | [factory.py:factory:_find_provider_class:125] - Provider `faker.providers.user_agent` does not feature localization. Specified locale `en_US` is not utilized for this provider.
D 2022-12-27 23:23:06,648| DEBUG    | [conf.py:conf:conf_get_db:30] - 读数据库服务器配置文件/Users/yangjingkang/PycharmProjects/YJK_api-master/confs/db.conf成功，数据库信息是{'host': '172.16.9.128', 'db': 'wa_test', 'user': 'root', 'passwd': '123456'}
I 2022-12-27 23:23:06,651| INFO     | [mysql.py:mysql:connect:28] - ===============>成功连接数据库,参数为：{'host': '172.16.9.128', 'db': 'wa_test', 'user': 'root', 'passwd': '123456'}<===================
I 2022-12-27 23:23:06,652| INFO     | [preposition_fixture.py:preposition_fixture:connect_db:29] - *********************开始数据库连接*********************
D 2022-12-27 23:23:06,658| DEBUG    | [connectionpool.py:connectionpool:_new_conn:227] - Starting new HTTP connection (1): 124.223.214.171:8080
I 2022-12-27 23:23:15,042| INFO     | [preposition_fixture.py:preposition_fixture:connect_db:31] - *********************开始关闭数据库连接*********************
D 2022-12-27 23:23:15,042| DEBUG    | [mysql.py:mysql:close_db:165] - ==============================关闭数据库成功===============================
D 2022-12-27 23:29:01,025| DEBUG    | [factory.py:factory:<module>:19] - Not in REPL -> leaving logger event level as is.
I 2022-12-27 23:29:01,419| INFO     | [get_data.py:get_data:read_special_list_excel:137] - 成功获取登录login所有用例，共12条用例
I 2022-12-27 23:29:01,419| INFO     | [get_data.py:get_data:read_special_list_excel:138] - [['测试成功登录', '/apitest/login/', 'post', 'data', "{'username':'test01','password':'123456'}", '1、正确输入接口地址 2、正确输入请求参数 3、查看响应body是否正确', 1000, 'Usercheck ok', '登录验证成功'], ['测试用户名为空', '/apitest/login/', 'post', 'data', "{'username':'','password':'123456'}", '1、正确输入接口地址 2、正确输入请求参数 3、查看响应body是否正确', 1001, 'Username is null', '用户名不能为空'], ['测试密码为空', '/apitest/login/', 'post', 'data', "{'username':'test02','password':''}", '1、正确输入接口地址 2、正确输入请求参数 3、查看响应body是否正确', 1002, 'Password is null', '密码不能为空'], ['测试用户名和密码均为空', '/apitest/login/', 'post', 'data', "{'username':'','password':''}", '1、正确输入接口地址 2、正确输入请求参数 3、查看响应body是否正确', 1001, 'Username is null', '用户名不能为空'], ['测试用户名错误', '/apitest/login/', 'post', 'data', "{'username':'test03','password':'123456'}", '1、正确输入接口地址 2、正确输入请求参数 3、查看响应body是否正确', 1003, 'Username error', '用户名错误'], ['测试密码错误', '/apitest/login/', 'post', 'data', "{'username':'test03','password':'123'}", '1、正确输入接口地址 2、正确输入请求参数 3、查看响应body是否正确', 1003, 'Password error', '密码错误'], ['测试用户名和密码均错误', '/apitest/login/', 'post', 'data', "{'username':'test05','password':'123'}", '1、正确输入接口地址 2、正确输入请求参数 3、查看响应body是否正确', 1003, 'Username error', '用户名错误'], ['测试用户名为中文', '/apitest/login/', 'post', 'data', "{'username':'你好','password':'123456'}", '1、正确输入接口地址 2、正确输入请求参数 3、查看响应body是否正确', 1003, 'Username error', '用户名错误'], ['测试用户名为数字', '/apitest/login/', 'post', 'data', "{'username':'123456','password':'123456'}", '1、正确输入接口地址 2、正确输入请求参数 3、查看响应body是否正确', 1003, 'Username error', '用户名错误'], ['测试密码为无效最大边界值', '/apitest/login/', 'post', 'data', "{'username':'test05','password':'12345678945647898468464'}", '1、正确输入接口地址 2、正确输入请求参数 3、查看响应body是否正确', 1003, 'Username error', '用户名错误'], ['测试用户名为特殊字符', '/apitest/login/', 'post', 'data', "{'username':'*%$','password':'123456'}", '1、正确输入接口地址 2、正确输入请求参数 3、查看响应body是否正确', 1003, 'Username error', '用户名错误'], ['测试密码长度超过限制', '/apitest/login/', 'post', 'data', "{'username':'test15','password':'123456784948494848484486486486'}", '1、正确输入接口地址 2、正确输入请求参数 3、查看响应body是否正确', 1004, 'Password error', '用户名错误']]
I 2022-12-27 23:29:01,441| INFO     | [get_data.py:get_data:read_special_rows_list_excel:160] - 成功从获取第12到12用例,共1条用例
I 2022-12-27 23:29:01,441| INFO     | [get_data.py:get_data:read_special_rows_list_excel:161] - [['测试密码长度超过限制', '/apitest/login/', 'post', '1、正确输入接口地址 2、正确输入请求参数 3、查看响应body是否正确', 1004, 'Password error', '用户名错误']]
I 2022-12-27 23:29:01,464| INFO     | [get_data.py:get_data:read_special_rows_list_excel:160] - 成功从获取第1到4用例,共4条用例
I 2022-12-27 23:29:01,465| INFO     | [get_data.py:get_data:read_special_rows_list_excel:161] - [['验证用户名密码正确登陆成功', '/integration/login', 'post', 'json', '{\n "data": {\n "password": "12345678",\n "userName": "root"\n }\n}', '1、正确输入接口地址 2、正确输入请求参数 3、查看响应body是否正确', 0, '登录成功', 1], ['验证用户名错误登陆失败', '/integration/login', 'post', 'json', '{\n "data": {\n "password": "12345678",\n "userName": "oot"\n }\n}', '1、正确输入接口地址 2、正确输入请求参数 3、查看响应body是否正确', 501, '用户名或口令错误', 1], ['验证密码错误登陆失败', '/integration/login', 'post', 'json', '{\n "data": {\n "password": "1234578",\n "userName": "root"\n }\n}', '1、正确输入接口地址 2、正确输入请求参数 3、查看响应body是否正确', 501, '用户名或口令错误', 1], ['验证用户名密码都错误登陆失败', '/integration/login', 'post', 'json', '{\n "data": {\n "password": "1234678",\n "userName": "rot"\n }\n}', '1、正确输入接口地址 2、正确输入请求参数 3、查看响应body是否正确', 501, '用户名或口令错误', 1]]
I 2022-12-27 23:29:01,486| INFO     | [get_data.py:get_data:read_special_list_excel:137] - 成功获取注册signup所有用例，共11条用例
I 2022-12-27 23:29:01,486| INFO     | [get_data.py:get_data:read_special_list_excel:138] - [['signup_01', '测试成功注册', '/apitest/signup/', 'post', 'json', "{'username':'test06','password':'123456','confirm':'123456','name':'成功注册用户'}", '1、正确输入接口地址 2、正确输入请求参数 3、查看响应body是否正确', "{'Status':1000,'Result':'Success','Message':'注册成功'}", 'users, info', "select count(*),(select count(*) from info where name='成功注册用户') from users where username='test06' and password=md5('123456')", '(1,1)'], ['signup_02', '测试用户名为空', '/apitest/signup/', 'post', 'json', "{'username':'','password':'123456','confirm':'123456','name':'注册用户名为空用户'}", '1、正确输入接口地址 2、正确输入请求参数 3、查看响应body是否正确', "{'Status':1001,'Result':'Username is null','Message':'注册失败，用户名不能为空'}", 'users, info', "select count(*),(select count(*) from info where name='注册用户名为空用户') from users where username='' and password=md5('123456')", '(0,0)'], ['signup_03', '测试密码为空', '/apitest/signup/', 'post', 'json', "{'username':'test07','password':'','confirm':'123456','name':'注册密码为空用户'}", '1、正确输入接口地址 2、正确输入请求参数 3、查看响应body是否正确', "{'Status':1002,'Result':'Password is null','Message':'注册失败，密码不能为空'}", 'users, info', "select count(*),(select count(*) from info where name='注册密码为空用户') from users where username='test07' and password=md5('')", '(0,0)'], ['signup_04', '测试确认密码为空', '/apitest/signup/', 'post', 'json', "{'username':'test08','password':'123456','confirm':'','name':'注册确认密码为空用户'}", '1、正确输入接口地址 2、正确输入请求参数 3、查看响应body是否正确', "{'Status':1003,'Result':'Confirm password is null','Message':'注册失败，确认密码不能为空'}", 'users, info', "select count(*),(select count(*) from info where name='注册确认密码为空用户') from users where username='test08' and password=md5('123456')", '(1,1)'], ['signup_05', '测试姓名为空', '/apitest/signup/', 'post', 'json', "{'username':'test09','password':'123456','confirm':'123456','name':''}", '1、正确输入接口地址 2、正确输入请求参数 3、查看响应body是否正确', "{'Status':1004,'Result':'Name is null','Message':'注册失败，姓名不能为空'}", 'users, info', "select count(*),(select count(*) from info where name='') from users where username='test09' and password=md5('123456')", '(0,0)'], ['signup_06', '测试参数全为空', '/apitest/signup/', 'post', 'json', "{'username':'','password':'','confirm':'','name':''}", '1、正确输入接口地址 2、正确输入请求参数 3、查看响应body是否正确', "{'Status':1001,'Result':'Username is null','Message':'注册失败，用户名不能为空'}", 'users, info', "select count(*),(select count(*) from info where name='') from users where username='' and password=md5('')", '(0,0)'], ['signup_07', '测试两个密码不一致', '/apitest/signup/', 'post', 'json', "{'username':'test10','password':'123456','confirm':'123','name':'注册两个密码不一致用户'}", '1、正确输入接口地址 2、正确输入请求参数 3、查看响应body是否正确', "{'Status':1009,'Result':'Confirm password error','Message':'注册失败，两个密码不一致'}", 'users, info', "select count(*),(select count(*) from info where name='注册两个密码不一致用户') from users where username='test10' and password=md5('123456')", '(0,0)'], ['signup_08', '测试用户重复注册', '/apitest/signup/', 'post', 'json', "{'username':'test11','password':'123456','confirm':'123456','name':'重复注册用户'}", '1、正确输入接口地址 2、正确输入请求参数 3、查看响应body是否正确', "{'Status':1010,'Result':'Username test11 is taken','Message':'注册失败，用户名已被占用'}", 'users, info', "select count(*),(select count(*) from info where name='重复注册用户') from users where username='test11' and password=md5('123456')", '(1,1)'], ['signup_09', '测试用户名为中文', '/apitest/signup/', 'post', 'json', '{"username":"阳靖康","password":"123456","confirm":"123456","name":"中文注册用户"}', '1、正确输入接口地址 2、正确输入请求参数 3、查看响应body是否正确', '{"Status":1000,"Result":"Success","Message":"注册成功"}', 'users, info', "select count(*),(select count(*) from info where name='中文注册用户') from users where username='阳靖康' and password=md5('123456')", '(1,1)'], ['signup_10', '测试用户名为特殊字符', '/apitest/signup/', 'post', 'json', '{"username":"%￥#@&*","password":"123456","confirm":"123456","name":"特殊字符用户"}', '1、正确输入接口地址 2、正确输入请求参数 3、查看响应body是否正确', '{"Status":1000,"Result":"Success","Message":"注册成功"}', 'users, info', "select count(*),(select count(*) from info where name='特殊字符用户') from users where username='%￥#@&*' and password=md5('123456')", '(1,1)'], ['signup_10', '测试用户名为特殊字符', '/apitest/signup/', 'post', 'json', '{"username":"test12","password":"阳靖康","confirm":"阳靖康","name":"注册密码为中文"}', '1、正确输入接口地址 2、正确输入请求参数 3、查看响应body是否正确', '{"Status":1000,"Result":"Success","Message":"注册成功"}', 'users, info', "select count(*),(select count(*) from info where name='注册密码为中文') from users where username='阳靖康'", '(1,1)']]
D 2022-12-27 23:29:01,491| DEBUG    | [factory.py:factory:_find_provider_class:95] - Looking for locale `en_US` in provider `faker.providers.address`.
D 2022-12-27 23:29:01,495| DEBUG    | [factory.py:factory:_find_provider_class:114] - Provider `faker.providers.address` has been localized to `en_US`.
D 2022-12-27 23:29:01,497| DEBUG    | [factory.py:factory:_find_provider_class:95] - Looking for locale `en_US` in provider `faker.providers.automotive`.
D 2022-12-27 23:29:01,499| DEBUG    | [factory.py:factory:_find_provider_class:114] - Provider `faker.providers.automotive` has been localized to `en_US`.
D 2022-12-27 23:29:01,500| DEBUG    | [factory.py:factory:_find_provider_class:95] - Looking for locale `en_US` in provider `faker.providers.bank`.
D 2022-12-27 23:29:01,502| DEBUG    | [factory.py:factory:_find_provider_class:105] - Specified locale `en_US` is not available for provider `faker.providers.bank`. Locale reset to `en_GB` for this provider.
D 2022-12-27 23:29:01,503| DEBUG    | [factory.py:factory:_find_provider_class:95] - Looking for locale `en_US` in provider `faker.providers.barcode`.
D 2022-12-27 23:29:01,503| DEBUG    | [factory.py:factory:_find_provider_class:114] - Provider `faker.providers.barcode` has been localized to `en_US`.
D 2022-12-27 23:29:01,505| DEBUG    | [factory.py:factory:_find_provider_class:95] - Looking for locale `en_US` in provider `faker.providers.color`.
D 2022-12-27 23:29:01,506| DEBUG    | [factory.py:factory:_find_provider_class:114] - Provider `faker.providers.color` has been localized to `en_US`.
D 2022-12-27 23:29:01,508| DEBUG    | [factory.py:factory:_find_provider_class:95] - Looking for locale `en_US` in provider `faker.providers.company`.
D 2022-12-27 23:29:01,511| DEBUG    | [factory.py:factory:_find_provider_class:114] - Provider `faker.providers.company` has been localized to `en_US`.
D 2022-12-27 23:29:01,512| DEBUG    | [factory.py:factory:_find_provider_class:95] - Looking for locale `en_US` in provider `faker.providers.credit_card`.
D 2022-12-27 23:29:01,512| DEBUG    | [factory.py:factory:_find_provider_class:114] - Provider `faker.providers.credit_card` has been localized to `en_US`.
D 2022-12-27 23:29:01,513| DEBUG    | [factory.py:factory:_find_provider_class:95] - Looking for locale `en_US` in provider `faker.providers.currency`.
D 2022-12-27 23:29:01,515| DEBUG    | [factory.py:factory:_find_provider_class:114] - Provider `faker.providers.currency` has been localized to `en_US`.
D 2022-12-27 23:29:01,516| DEBUG    | [factory.py:factory:_find_provider_class:95] - Looking for locale `en_US` in provider `faker.providers.date_time`.
D 2022-12-27 23:29:01,519| DEBUG    | [factory.py:factory:_find_provider_class:114] - Provider `faker.providers.date_time` has been localized to `en_US`.
D 2022-12-27 23:29:01,520| DEBUG    | [factory.py:factory:_find_provider_class:125] - Provider `faker.providers.file` does not feature localization. Specified locale `en_US` is not utilized for this provider.
D 2022-12-27 23:29:01,520| DEBUG    | [factory.py:factory:_find_provider_class:95] - Looking for locale `en_US` in provider `faker.providers.geo`.
D 2022-12-27 23:29:01,521| DEBUG    | [factory.py:factory:_find_provider_class:114] - Provider `faker.providers.geo` has been localized to `en_US`.
D 2022-12-27 23:29:01,522| DEBUG    | [factory.py:factory:_find_provider_class:95] - Looking for locale `en_US` in provider `faker.providers.internet`.
D 2022-12-27 23:29:01,525| DEBUG    | [factory.py:factory:_find_provider_class:114] - Provider `faker.providers.internet` has been localized to `en_US`.
D 2022-12-27 23:29:01,526| DEBUG    | [factory.py:factory:_find_provider_class:125] - Provider `faker.providers.isbn` does not feature localization. Specified locale `en_US` is not utilized for this provider.
D 2022-12-27 23:29:01,526| DEBUG    | [factory.py:factory:_find_provider_class:95] - Looking for locale `en_US` in provider `faker.providers.job`.
D 2022-12-27 23:29:01,528| DEBUG    | [factory.py:factory:_find_provider_class:114] - Provider `faker.providers.job` has been localized to `en_US`.
D 2022-12-27 23:29:01,529| DEBUG    | [factory.py:factory:_find_provider_class:95] - Looking for locale `en_US` in provider `faker.providers.lorem`.
D 2022-12-27 23:29:01,530| DEBUG    | [factory.py:factory:_find_provider_class:114] - Provider `faker.providers.lorem` has been localized to `en_US`.
D 2022-12-27 23:29:01,533| DEBUG    | [factory.py:factory:_find_provider_class:95] - Looking for locale `en_US` in provider `faker.providers.misc`.
D 2022-12-27 23:29:01,533| DEBUG    | [factory.py:factory:_find_provider_class:114] - Provider `faker.providers.misc` has been localized to `en_US`.
D 2022-12-27 23:29:01,534| DEBUG    | [factory.py:factory:_find_provider_class:95] - Looking for locale `en_US` in provider `faker.providers.person`.
D 2022-12-27 23:29:01,538| DEBUG    | [factory.py:factory:_find_provider_class:114] - Provider `faker.providers.person` has been localized to `en_US`.
D 2022-12-27 23:29:01,543| DEBUG    | [factory.py:factory:_find_provider_class:95] - Looking for locale `en_US` in provider `faker.providers.phone_number`.
D 2022-12-27 23:29:01,546| DEBUG    | [factory.py:factory:_find_provider_class:114] - Provider `faker.providers.phone_number` has been localized to `en_US`.
D 2022-12-27 23:29:01,547| DEBUG    | [factory.py:factory:_find_provider_class:125] - Provider `faker.providers.profile` does not feature localization. Specified locale `en_US` is not utilized for this provider.
D 2022-12-27 23:29:01,548| DEBUG    | [factory.py:factory:_find_provider_class:125] - Provider `faker.providers.python` does not feature localization. Specified locale `en_US` is not utilized for this provider.
D 2022-12-27 23:29:01,548| DEBUG    | [factory.py:factory:_find_provider_class:95] - Looking for locale `en_US` in provider `faker.providers.ssn`.
D 2022-12-27 23:29:01,551| DEBUG    | [factory.py:factory:_find_provider_class:114] - Provider `faker.providers.ssn` has been localized to `en_US`.
D 2022-12-27 23:29:01,552| DEBUG    | [factory.py:factory:_find_provider_class:125] - Provider `faker.providers.user_agent` does not feature localization. Specified locale `en_US` is not utilized for this provider.
D 2022-12-27 23:29:01,553| DEBUG    | [conf.py:conf:conf_get_db:30] - 读数据库服务器配置文件/Users/yangjingkang/PycharmProjects/YJK_api-master/confs/db.conf成功，数据库信息是{'host': '172.16.9.128', 'db': 'wa_test', 'user': 'root', 'passwd': '123456'}
I 2022-12-27 23:29:01,557| INFO     | [mysql.py:mysql:connect:28] - ===============>成功连接数据库,参数为：{'host': '172.16.9.128', 'db': 'wa_test', 'user': 'root', 'passwd': '123456'}<===================
I 2022-12-27 23:29:01,557| INFO     | [preposition_fixture.py:preposition_fixture:connect_db:29] - *********************开始数据库连接*********************
I 2022-12-27 23:29:01,557| INFO     | [preposition_fixture.py:preposition_fixture:get_usernm_passwd:44] - ==========开始获取获取用户信息==========
I 2022-12-27 23:29:01,562| INFO     | [preposition_fixture.py:preposition_fixture:get_usernm_passwd:47] - ==========成功获取用户信息：admin,e10adc3949ba59abbe56e057f20f883e ==========
D 2022-12-27 23:29:01,565| DEBUG    | [mysql.py:mysql:delete_one:94] - 执行SQL语句=====>DELETE FROM info WHERE id=4<=====成功
D 2022-12-27 23:29:01,567| DEBUG    | [mysql.py:mysql:delete_one:94] - 执行SQL语句=====>DELETE FROM users WHERE id=4<=====成功
D 2022-12-27 23:29:01,569| DEBUG    | [mysql.py:mysql:insert_one:44] - 执行SQL语句=====>INSERT INTO users(id, username, password) VALUES(4, 'test01', md5('123456'))<=====成功
D 2022-12-27 23:29:01,570| DEBUG    | [mysql.py:mysql:delete_one:94] - 执行SQL语句=====>DELETE FROM info WHERE id=5<=====成功
D 2022-12-27 23:29:01,571| DEBUG    | [mysql.py:mysql:delete_one:94] - 执行SQL语句=====>DELETE FROM users WHERE id=5<=====成功
D 2022-12-27 23:29:01,573| DEBUG    | [mysql.py:mysql:insert_one:44] - 执行SQL语句=====>INSERT INTO users(id, username, password) VALUES(5, 'test02', md5('123456'))<=====成功
D 2022-12-27 23:29:01,574| DEBUG    | [mysql.py:mysql:delete_one:94] - 执行SQL语句=====>INSERT INTO info(id, name) VALUES(5, '登录密码为空用户')<=====成功
D 2022-12-27 23:29:01,575| DEBUG    | [mysql.py:mysql:delete_one:94] - 执行SQL语句=====>DELETE FROM info WHERE name='登录用户名错误用户'<=====成功
D 2022-12-27 23:29:01,576| DEBUG    | [mysql.py:mysql:delete_one:94] - 执行SQL语句=====>DELETE FROM users WHERE username='test03'<=====成功
D 2022-12-27 23:29:01,578| DEBUG    | [mysql.py:mysql:delete_one:94] - 执行SQL语句=====>DELETE FROM info WHERE id=6<=====成功
D 2022-12-27 23:29:01,579| DEBUG    | [mysql.py:mysql:delete_one:94] - 执行SQL语句=====>DELETE FROM users WHERE id=6<=====成功
D 2022-12-27 23:29:01,580| DEBUG    | [mysql.py:mysql:insert_one:44] - 执行SQL语句=====>INSERT INTO users(id, username, password) VALUES(6, 'test04', md5('123456'))<=====成功
D 2022-12-27 23:29:01,582| DEBUG    | [mysql.py:mysql:delete_one:94] - 执行SQL语句=====>INSERT INTO info(id, name) VALUES(6, '登录密码错误用户')<=====成功
D 2022-12-27 23:29:01,583| DEBUG    | [mysql.py:mysql:delete_one:94] - 执行SQL语句=====>DELETE FROM info WHERE name='登录用户名与密码均错误用户'<=====成功
D 2022-12-27 23:29:01,584| DEBUG    | [mysql.py:mysql:delete_one:94] - 执行SQL语句=====>DELETE FROM users WHERE username='test05'<=====成功
D 2022-12-27 23:29:01,585| DEBUG    | [mysql.py:mysql:delete_one:94] - 执行SQL语句=====>DELETE FROM info WHERE id=8<=====成功
D 2022-12-27 23:29:01,606| DEBUG    | [mysql.py:mysql:delete_one:94] - 执行SQL语句=====>DELETE FROM users WHERE id=8<=====成功
D 2022-12-27 23:29:01,608| DEBUG    | [mysql.py:mysql:insert_one:44] - 执行SQL语句=====>INSERT INTO users(id, username, password) VALUES(8, 'test15', md5('123456'))<=====成功
D 2022-12-27 23:29:01,610| DEBUG    | [mysql.py:mysql:delete_one:94] - 执行SQL语句=====>INSERT INTO info(id, name) VALUES(8, '密码超过限制长度')<=====成功
D 2022-12-27 23:29:01,618| DEBUG    | [connectionpool.py:connectionpool:_new_conn:227] - Starting new HTTP connection (1): 172.16.9.128:80
D 2022-12-27 23:29:01,630| DEBUG    | [connectionpool.py:connectionpool:_make_request:452] - http://172.16.9.128:80 "POST /apitest/login/ HTTP/1.1" 200 70
D 2022-12-27 23:29:01,631| DEBUG    | [requeststart.py:requeststart:send_request:22] - 发起请求的参数为：{'url': 'http://172.16.9.128:80/apitest/login/', 'method': 'post', 'data': {'username': 'test01', 'password': '123456'}}
D 2022-12-27 23:29:01,631| DEBUG    | [asserts.py:asserts:assert_code:30] - Response_Code实际结果为：1000
D 2022-12-27 23:29:01,631| DEBUG    | [asserts.py:asserts:assert_code:31] - Response_Code预期结果为：1000
I 2022-12-27 23:29:01,631| INFO     | [asserts.py:asserts:assert_code:33] - 断言Code用例通过！
D 2022-12-27 23:29:01,632| DEBUG    | [asserts.py:asserts:assert_message:42] - Response_Message实际结果为：Usercheck ok
D 2022-12-27 23:29:01,632| DEBUG    | [asserts.py:asserts:assert_message:43] - Response_Message预期结果为：Usercheck ok
I 2022-12-27 23:29:01,632| INFO     | [asserts.py:asserts:assert_message:45] - 断言Message用例通过！
D 2022-12-27 23:29:01,632| DEBUG    | [asserts.py:asserts:assert_message:42] - Response_Message实际结果为：登录验证成功
D 2022-12-27 23:29:01,632| DEBUG    | [asserts.py:asserts:assert_message:43] - Response_Message预期结果为：登录验证成功
I 2022-12-27 23:29:01,633| INFO     | [asserts.py:asserts:assert_message:45] - 断言Message用例通过！
D 2022-12-27 23:29:01,639| DEBUG    | [connectionpool.py:connectionpool:_new_conn:227] - Starting new HTTP connection (1): 172.16.9.128:80
D 2022-12-27 23:29:01,642| DEBUG    | [connectionpool.py:connectionpool:_make_request:452] - http://172.16.9.128:80 "POST /apitest/login/ HTTP/1.1" 200 77
D 2022-12-27 23:29:01,643| DEBUG    | [requeststart.py:requeststart:send_request:22] - 发起请求的参数为：{'url': 'http://172.16.9.128:80/apitest/login/', 'method': 'post', 'data': {'username': '', 'password': '123456'}}
D 2022-12-27 23:29:01,643| DEBUG    | [asserts.py:asserts:assert_code:30] - Response_Code实际结果为：1001
D 2022-12-27 23:29:01,643| DEBUG    | [asserts.py:asserts:assert_code:31] - Response_Code预期结果为：1001
I 2022-12-27 23:29:01,644| INFO     | [asserts.py:asserts:assert_code:33] - 断言Code用例通过！
D 2022-12-27 23:29:01,644| DEBUG    | [asserts.py:asserts:assert_message:42] - Response_Message实际结果为：Username is null
D 2022-12-27 23:29:01,644| DEBUG    | [asserts.py:asserts:assert_message:43] - Response_Message预期结果为：Username is null
I 2022-12-27 23:29:01,644| INFO     | [asserts.py:asserts:assert_message:45] - 断言Message用例通过！
D 2022-12-27 23:29:01,645| DEBUG    | [asserts.py:asserts:assert_message:42] - Response_Message实际结果为：用户名不能为空
D 2022-12-27 23:29:01,645| DEBUG    | [asserts.py:asserts:assert_message:43] - Response_Message预期结果为：用户名不能为空
I 2022-12-27 23:29:01,646| INFO     | [asserts.py:asserts:assert_message:45] - 断言Message用例通过！
D 2022-12-27 23:29:01,653| DEBUG    | [connectionpool.py:connectionpool:_new_conn:227] - Starting new HTTP connection (1): 172.16.9.128:80
D 2022-12-27 23:29:01,656| DEBUG    | [connectionpool.py:connectionpool:_make_request:452] - http://172.16.9.128:80 "POST /apitest/login/ HTTP/1.1" 200 74
D 2022-12-27 23:29:01,657| DEBUG    | [requeststart.py:requeststart:send_request:22] - 发起请求的参数为：{'url': 'http://172.16.9.128:80/apitest/login/', 'method': 'post', 'data': {'username': 'test02', 'password': ''}}
D 2022-12-27 23:29:01,657| DEBUG    | [asserts.py:asserts:assert_code:30] - Response_Code实际结果为：1002
D 2022-12-27 23:29:01,658| DEBUG    | [asserts.py:asserts:assert_code:31] - Response_Code预期结果为：1002
I 2022-12-27 23:29:01,658| INFO     | [asserts.py:asserts:assert_code:33] - 断言Code用例通过！
D 2022-12-27 23:29:01,658| DEBUG    | [asserts.py:asserts:assert_message:42] - Response_Message实际结果为：Password is null
D 2022-12-27 23:29:01,658| DEBUG    | [asserts.py:asserts:assert_message:43] - Response_Message预期结果为：Password is null
I 2022-12-27 23:29:01,658| INFO     | [asserts.py:asserts:assert_message:45] - 断言Message用例通过！
D 2022-12-27 23:29:01,659| DEBUG    | [asserts.py:asserts:assert_message:42] - Response_Message实际结果为：密码不能为空
D 2022-12-27 23:29:01,659| DEBUG    | [asserts.py:asserts:assert_message:43] - Response_Message预期结果为：密码不能为空
I 2022-12-27 23:29:01,659| INFO     | [asserts.py:asserts:assert_message:45] - 断言Message用例通过！
D 2022-12-27 23:29:01,667| DEBUG    | [connectionpool.py:connectionpool:_new_conn:227] - Starting new HTTP connection (1): 172.16.9.128:80
D 2022-12-27 23:29:01,672| DEBUG    | [connectionpool.py:connectionpool:_make_request:452] - http://172.16.9.128:80 "POST /apitest/login/ HTTP/1.1" 200 77
D 2022-12-27 23:29:01,673| DEBUG    | [requeststart.py:requeststart:send_request:22] - 发起请求的参数为：{'url': 'http://172.16.9.128:80/apitest/login/', 'method': 'post', 'data': {'username': '', 'password': ''}}
D 2022-12-27 23:29:01,673| DEBUG    | [asserts.py:asserts:assert_code:30] - Response_Code实际结果为：1001
D 2022-12-27 23:29:01,674| DEBUG    | [asserts.py:asserts:assert_code:31] - Response_Code预期结果为：1001
I 2022-12-27 23:29:01,674| INFO     | [asserts.py:asserts:assert_code:33] - 断言Code用例通过！
D 2022-12-27 23:29:01,674| DEBUG    | [asserts.py:asserts:assert_message:42] - Response_Message实际结果为：Username is null
D 2022-12-27 23:29:01,674| DEBUG    | [asserts.py:asserts:assert_message:43] - Response_Message预期结果为：Username is null
I 2022-12-27 23:29:01,675| INFO     | [asserts.py:asserts:assert_message:45] - 断言Message用例通过！
D 2022-12-27 23:29:01,675| DEBUG    | [asserts.py:asserts:assert_message:42] - Response_Message实际结果为：用户名不能为空
D 2022-12-27 23:29:01,675| DEBUG    | [asserts.py:asserts:assert_message:43] - Response_Message预期结果为：用户名不能为空
I 2022-12-27 23:29:01,675| INFO     | [asserts.py:asserts:assert_message:45] - 断言Message用例通过！
D 2022-12-27 23:29:01,683| DEBUG    | [connectionpool.py:connectionpool:_new_conn:227] - Starting new HTTP connection (1): 172.16.9.128:80
D 2022-12-27 23:29:01,706| DEBUG    | [connectionpool.py:connectionpool:_make_request:452] - http://172.16.9.128:80 "POST /apitest/login/ HTTP/1.1" 200 69
D 2022-12-27 23:29:01,707| DEBUG    | [requeststart.py:requeststart:send_request:22] - 发起请求的参数为：{'url': 'http://172.16.9.128:80/apitest/login/', 'method': 'post', 'data': {'username': 'test03', 'password': '123456'}}
D 2022-12-27 23:29:01,707| DEBUG    | [asserts.py:asserts:assert_code:30] - Response_Code实际结果为：1003
D 2022-12-27 23:29:01,707| DEBUG    | [asserts.py:asserts:assert_code:31] - Response_Code预期结果为：1003
I 2022-12-27 23:29:01,707| INFO     | [asserts.py:asserts:assert_code:33] - 断言Code用例通过！
D 2022-12-27 23:29:01,708| DEBUG    | [asserts.py:asserts:assert_message:42] - Response_Message实际结果为：Username error
D 2022-12-27 23:29:01,708| DEBUG    | [asserts.py:asserts:assert_message:43] - Response_Message预期结果为：Username error
I 2022-12-27 23:29:01,708| INFO     | [asserts.py:asserts:assert_message:45] - 断言Message用例通过！
D 2022-12-27 23:29:01,708| DEBUG    | [asserts.py:asserts:assert_message:42] - Response_Message实际结果为：用户名错误
D 2022-12-27 23:29:01,708| DEBUG    | [asserts.py:asserts:assert_message:43] - Response_Message预期结果为：用户名错误
I 2022-12-27 23:29:01,709| INFO     | [asserts.py:asserts:assert_message:45] - 断言Message用例通过！
D 2022-12-27 23:29:01,714| DEBUG    | [connectionpool.py:connectionpool:_new_conn:227] - Starting new HTTP connection (1): 172.16.9.128:80
D 2022-12-27 23:29:01,718| DEBUG    | [connectionpool.py:connectionpool:_make_request:452] - http://172.16.9.128:80 "POST /apitest/login/ HTTP/1.1" 200 69
D 2022-12-27 23:29:01,718| DEBUG    | [requeststart.py:requeststart:send_request:22] - 发起请求的参数为：{'url': 'http://172.16.9.128:80/apitest/login/', 'method': 'post', 'data': {'username': 'test03', 'password': '123'}}
D 2022-12-27 23:29:01,719| DEBUG    | [asserts.py:asserts:assert_code:30] - Response_Code实际结果为：1003
D 2022-12-27 23:29:01,719| DEBUG    | [asserts.py:asserts:assert_code:31] - Response_Code预期结果为：1003
I 2022-12-27 23:29:01,719| INFO     | [asserts.py:asserts:assert_code:33] - 断言Code用例通过！
D 2022-12-27 23:29:01,719| DEBUG    | [asserts.py:asserts:assert_message:42] - Response_Message实际结果为：Username error
D 2022-12-27 23:29:01,719| DEBUG    | [asserts.py:asserts:assert_message:43] - Response_Message预期结果为：Password error
E 2022-12-27 23:29:01,720| ERROR    | [asserts.py:asserts:assert_message:47] - 断言失败，Response_Message实际结果为：Username error，Response预期结果为：Password error
E 2022-12-27 23:29:01,720| ERROR    | [asserts.py:asserts:assert_message:48] - 断言用例不通过！
D 2022-12-27 23:29:01,824| DEBUG    | [connectionpool.py:connectionpool:_new_conn:227] - Starting new HTTP connection (1): 172.16.9.128:80
D 2022-12-27 23:29:01,829| DEBUG    | [connectionpool.py:connectionpool:_make_request:452] - http://172.16.9.128:80 "POST /apitest/login/ HTTP/1.1" 200 69
D 2022-12-27 23:29:01,830| DEBUG    | [requeststart.py:requeststart:send_request:22] - 发起请求的参数为：{'url': 'http://172.16.9.128:80/apitest/login/', 'method': 'post', 'data': {'username': 'test05', 'password': '123'}}
D 2022-12-27 23:29:01,831| DEBUG    | [asserts.py:asserts:assert_code:30] - Response_Code实际结果为：1003
D 2022-12-27 23:29:01,831| DEBUG    | [asserts.py:asserts:assert_code:31] - Response_Code预期结果为：1003
I 2022-12-27 23:29:01,831| INFO     | [asserts.py:asserts:assert_code:33] - 断言Code用例通过！
D 2022-12-27 23:29:01,831| DEBUG    | [asserts.py:asserts:assert_message:42] - Response_Message实际结果为：Username error
D 2022-12-27 23:29:01,832| DEBUG    | [asserts.py:asserts:assert_message:43] - Response_Message预期结果为：Username error
I 2022-12-27 23:29:01,832| INFO     | [asserts.py:asserts:assert_message:45] - 断言Message用例通过！
D 2022-12-27 23:29:01,832| DEBUG    | [asserts.py:asserts:assert_message:42] - Response_Message实际结果为：用户名错误
D 2022-12-27 23:29:01,832| DEBUG    | [asserts.py:asserts:assert_message:43] - Response_Message预期结果为：用户名错误
I 2022-12-27 23:29:01,832| INFO     | [asserts.py:asserts:assert_message:45] - 断言Message用例通过！
D 2022-12-27 23:29:01,839| DEBUG    | [connectionpool.py:connectionpool:_new_conn:227] - Starting new HTTP connection (1): 172.16.9.128:80
D 2022-12-27 23:29:01,844| DEBUG    | [connectionpool.py:connectionpool:_make_request:452] - http://172.16.9.128:80 "POST /apitest/login/ HTTP/1.1" 200 69
D 2022-12-27 23:29:01,845| DEBUG    | [requeststart.py:requeststart:send_request:22] - 发起请求的参数为：{'url': 'http://172.16.9.128:80/apitest/login/', 'method': 'post', 'data': {'username': '你好', 'password': '123456'}}
D 2022-12-27 23:29:01,845| DEBUG    | [asserts.py:asserts:assert_code:30] - Response_Code实际结果为：1003
D 2022-12-27 23:29:01,845| DEBUG    | [asserts.py:asserts:assert_code:31] - Response_Code预期结果为：1003
I 2022-12-27 23:29:01,846| INFO     | [asserts.py:asserts:assert_code:33] - 断言Code用例通过！
D 2022-12-27 23:29:01,846| DEBUG    | [asserts.py:asserts:assert_message:42] - Response_Message实际结果为：Username error
D 2022-12-27 23:29:01,846| DEBUG    | [asserts.py:asserts:assert_message:43] - Response_Message预期结果为：Username error
I 2022-12-27 23:29:01,847| INFO     | [asserts.py:asserts:assert_message:45] - 断言Message用例通过！
D 2022-12-27 23:29:01,847| DEBUG    | [asserts.py:asserts:assert_message:42] - Response_Message实际结果为：用户名错误
D 2022-12-27 23:29:01,847| DEBUG    | [asserts.py:asserts:assert_message:43] - Response_Message预期结果为：用户名错误
I 2022-12-27 23:29:01,847| INFO     | [asserts.py:asserts:assert_message:45] - 断言Message用例通过！
D 2022-12-27 23:29:01,856| DEBUG    | [connectionpool.py:connectionpool:_new_conn:227] - Starting new HTTP connection (1): 172.16.9.128:80
D 2022-12-27 23:29:01,882| DEBUG    | [connectionpool.py:connectionpool:_make_request:452] - http://172.16.9.128:80 "POST /apitest/login/ HTTP/1.1" 200 69
D 2022-12-27 23:29:01,883| DEBUG    | [requeststart.py:requeststart:send_request:22] - 发起请求的参数为：{'url': 'http://172.16.9.128:80/apitest/login/', 'method': 'post', 'data': {'username': '123456', 'password': '123456'}}
D 2022-12-27 23:29:01,884| DEBUG    | [asserts.py:asserts:assert_code:30] - Response_Code实际结果为：1003
D 2022-12-27 23:29:01,884| DEBUG    | [asserts.py:asserts:assert_code:31] - Response_Code预期结果为：1003
I 2022-12-27 23:29:01,885| INFO     | [asserts.py:asserts:assert_code:33] - 断言Code用例通过！
D 2022-12-27 23:29:01,885| DEBUG    | [asserts.py:asserts:assert_message:42] - Response_Message实际结果为：Username error
D 2022-12-27 23:29:01,885| DEBUG    | [asserts.py:asserts:assert_message:43] - Response_Message预期结果为：Username error
I 2022-12-27 23:29:01,885| INFO     | [asserts.py:asserts:assert_message:45] - 断言Message用例通过！
D 2022-12-27 23:29:01,886| DEBUG    | [asserts.py:asserts:assert_message:42] - Response_Message实际结果为：用户名错误
D 2022-12-27 23:29:01,886| DEBUG    | [asserts.py:asserts:assert_message:43] - Response_Message预期结果为：用户名错误
I 2022-12-27 23:29:01,886| INFO     | [asserts.py:asserts:assert_message:45] - 断言Message用例通过！
D 2022-12-27 23:29:01,896| DEBUG    | [connectionpool.py:connectionpool:_new_conn:227] - Starting new HTTP connection (1): 172.16.9.128:80
D 2022-12-27 23:29:01,901| DEBUG    | [connectionpool.py:connectionpool:_make_request:452] - http://172.16.9.128:80 "POST /apitest/login/ HTTP/1.1" 200 69
D 2022-12-27 23:29:01,902| DEBUG    | [requeststart.py:requeststart:send_request:22] - 发起请求的参数为：{'url': 'http://172.16.9.128:80/apitest/login/', 'method': 'post', 'data': {'username': 'test05', 'password': '12345678945647898468464'}}
D 2022-12-27 23:29:01,903| DEBUG    | [asserts.py:asserts:assert_code:30] - Response_Code实际结果为：1003
D 2022-12-27 23:29:01,903| DEBUG    | [asserts.py:asserts:assert_code:31] - Response_Code预期结果为：1003
I 2022-12-27 23:29:01,904| INFO     | [asserts.py:asserts:assert_code:33] - 断言Code用例通过！
D 2022-12-27 23:29:01,904| DEBUG    | [asserts.py:asserts:assert_message:42] - Response_Message实际结果为：Username error
D 2022-12-27 23:29:01,904| DEBUG    | [asserts.py:asserts:assert_message:43] - Response_Message预期结果为：Username error
I 2022-12-27 23:29:01,905| INFO     | [asserts.py:asserts:assert_message:45] - 断言Message用例通过！
D 2022-12-27 23:29:01,905| DEBUG    | [asserts.py:asserts:assert_message:42] - Response_Message实际结果为：用户名错误
D 2022-12-27 23:29:01,905| DEBUG    | [asserts.py:asserts:assert_message:43] - Response_Message预期结果为：用户名错误
I 2022-12-27 23:29:01,905| INFO     | [asserts.py:asserts:assert_message:45] - 断言Message用例通过！
D 2022-12-27 23:29:01,914| DEBUG    | [connectionpool.py:connectionpool:_new_conn:227] - Starting new HTTP connection (1): 172.16.9.128:80
D 2022-12-27 23:29:01,917| DEBUG    | [connectionpool.py:connectionpool:_make_request:452] - http://172.16.9.128:80 "POST /apitest/login/ HTTP/1.1" 200 69
D 2022-12-27 23:29:01,918| DEBUG    | [requeststart.py:requeststart:send_request:22] - 发起请求的参数为：{'url': 'http://172.16.9.128:80/apitest/login/', 'method': 'post', 'data': {'username': '*%$', 'password': '123456'}}
D 2022-12-27 23:29:01,919| DEBUG    | [asserts.py:asserts:assert_code:30] - Response_Code实际结果为：1003
D 2022-12-27 23:29:01,919| DEBUG    | [asserts.py:asserts:assert_code:31] - Response_Code预期结果为：1003
I 2022-12-27 23:29:01,920| INFO     | [asserts.py:asserts:assert_code:33] - 断言Code用例通过！
D 2022-12-27 23:29:01,920| DEBUG    | [asserts.py:asserts:assert_message:42] - Response_Message实际结果为：Username error
D 2022-12-27 23:29:01,920| DEBUG    | [asserts.py:asserts:assert_message:43] - Response_Message预期结果为：Username error
I 2022-12-27 23:29:01,921| INFO     | [asserts.py:asserts:assert_message:45] - 断言Message用例通过！
D 2022-12-27 23:29:01,921| DEBUG    | [asserts.py:asserts:assert_message:42] - Response_Message实际结果为：用户名错误
D 2022-12-27 23:29:01,921| DEBUG    | [asserts.py:asserts:assert_message:43] - Response_Message预期结果为：用户名错误
I 2022-12-27 23:29:01,922| INFO     | [asserts.py:asserts:assert_message:45] - 断言Message用例通过！
D 2022-12-27 23:29:01,931| DEBUG    | [connectionpool.py:connectionpool:_new_conn:227] - Starting new HTTP connection (1): 172.16.9.128:80
D 2022-12-27 23:29:01,937| DEBUG    | [connectionpool.py:connectionpool:_make_request:452] - http://172.16.9.128:80 "POST /apitest/login/ HTTP/1.1" 200 78
D 2022-12-27 23:29:01,938| DEBUG    | [requeststart.py:requeststart:send_request:22] - 发起请求的参数为：{'url': 'http://172.16.9.128:80/apitest/login/', 'method': 'post', 'data': {'username': 'test15', 'password': '123456784948494848484486486486'}}
D 2022-12-27 23:29:01,939| DEBUG    | [asserts.py:asserts:assert_code:30] - Response_Code实际结果为：1004
D 2022-12-27 23:29:01,939| DEBUG    | [asserts.py:asserts:assert_code:31] - Response_Code预期结果为：1004
I 2022-12-27 23:29:01,939| INFO     | [asserts.py:asserts:assert_code:33] - 断言Code用例通过！
D 2022-12-27 23:29:01,940| DEBUG    | [asserts.py:asserts:assert_message:42] - Response_Message实际结果为：Password error
D 2022-12-27 23:29:01,940| DEBUG    | [asserts.py:asserts:assert_message:43] - Response_Message预期结果为：Password error
I 2022-12-27 23:29:01,941| INFO     | [asserts.py:asserts:assert_message:45] - 断言Message用例通过！
D 2022-12-27 23:29:01,942| DEBUG    | [asserts.py:asserts:assert_message:42] - Response_Message实际结果为：用户名或密码错误
D 2022-12-27 23:29:01,943| DEBUG    | [asserts.py:asserts:assert_message:43] - Response_Message预期结果为：用户名错误
E 2022-12-27 23:29:01,943| ERROR    | [asserts.py:asserts:assert_message:47] - 断言失败，Response_Message实际结果为：用户名或密码错误，Response预期结果为：用户名错误
E 2022-12-27 23:29:01,944| ERROR    | [asserts.py:asserts:assert_message:48] - 断言用例不通过！
I 2022-12-27 23:29:01,975| INFO     | [preposition_fixture.py:preposition_fixture:connect_db:31] - *********************开始关闭数据库连接*********************
D 2022-12-27 23:29:01,975| DEBUG    | [mysql.py:mysql:close_db:165] - ==============================关闭数据库成功===============================
D 2022-12-27 23:29:01,994| DEBUG    | [conf.py:conf:conf_get_db:30] - 读数据库服务器配置文件/Users/yangjingkang/PycharmProjects/YJK_api-master/confs/db.conf成功，数据库信息是{'host': '172.16.9.128', 'db': 'wa_test', 'user': 'root', 'passwd': '123456'}
I 2022-12-27 23:29:01,997| INFO     | [mysql.py:mysql:connect:28] - ===============>成功连接数据库,参数为：{'host': '172.16.9.128', 'db': 'wa_test', 'user': 'root', 'passwd': '123456'}<===================
I 2022-12-27 23:29:01,997| INFO     | [preposition_fixture.py:preposition_fixture:connect_db:30] - *********************开始数据库连接*********************
D 2022-12-27 23:29:02,000| DEBUG    | [mysql.py:mysql:delete_one:94] - 执行SQL语句=====>DELETE FROM info WHERE name='成功注册用户'<=====成功
D 2022-12-27 23:29:02,002| DEBUG    | [mysql.py:mysql:delete_one:94] - 执行SQL语句=====>DELETE FROM users WHERE username='test06'<=====成功
D 2022-12-27 23:29:02,003| DEBUG    | [mysql.py:mysql:delete_one:94] - 执行SQL语句=====>DELETE FROM info WHERE name='注册密码为空用户'<=====成功
D 2022-12-27 23:29:02,006| DEBUG    | [mysql.py:mysql:delete_one:94] - 执行SQL语句=====>DELETE FROM info WHERE name='注册确认密码为空用户'<=====成功
D 2022-12-27 23:29:02,008| DEBUG    | [mysql.py:mysql:delete_one:94] - 执行SQL语句=====>DELETE FROM users WHERE username='test08'<=====成功
D 2022-12-27 23:29:02,010| DEBUG    | [mysql.py:mysql:delete_one:94] - 执行SQL语句=====>DELETE FROM users WHERE username='test09'<=====成功
D 2022-12-27 23:29:02,011| DEBUG    | [mysql.py:mysql:delete_one:94] - 执行SQL语句=====>DELETE FROM info WHERE name='注册两个密码不一致用户'<=====成功
D 2022-12-27 23:29:02,013| DEBUG    | [mysql.py:mysql:delete_one:94] - 执行SQL语句=====>DELETE FROM users WHERE username='test10'<=====成功
D 2022-12-27 23:29:02,015| DEBUG    | [mysql.py:mysql:delete_one:94] - 执行SQL语句=====>DELETE FROM info WHERE id=7<=====成功
D 2022-12-27 23:29:02,017| DEBUG    | [mysql.py:mysql:delete_one:94] - 执行SQL语句=====>DELETE FROM users WHERE id=7<=====成功
D 2022-12-27 23:29:02,020| DEBUG    | [mysql.py:mysql:insert_one:44] - 执行SQL语句=====>INSERT INTO users(id, username, password) VALUES(7, 'test11', md5('123456'))<=====成功
D 2022-12-27 23:29:02,022| DEBUG    | [mysql.py:mysql:insert_one:44] - 执行SQL语句=====>INSERT INTO info(id, name) VALUES(7, '重复注册用户')<=====成功
D 2022-12-27 23:29:02,024| DEBUG    | [mysql.py:mysql:delete_one:94] - 执行SQL语句=====>DELETE FROM info WHERE name='中文注册用户'<=====成功
D 2022-12-27 23:29:02,026| DEBUG    | [mysql.py:mysql:delete_one:94] - 执行SQL语句=====>DELETE FROM users WHERE username='阳靖康'<=====成功
D 2022-12-27 23:29:02,029| DEBUG    | [mysql.py:mysql:delete_one:94] - 执行SQL语句=====>DELETE FROM info WHERE name='特殊字符用户'<=====成功
D 2022-12-27 23:29:02,032| DEBUG    | [mysql.py:mysql:delete_one:94] - 执行SQL语句=====>DELETE FROM users WHERE username='%￥#@&*'<=====成功
D 2022-12-27 23:29:02,034| DEBUG    | [mysql.py:mysql:delete_one:94] - 执行SQL语句=====>DELETE FROM info WHERE name='注册密码为中文'<=====成功
D 2022-12-27 23:29:02,037| DEBUG    | [mysql.py:mysql:delete_one:94] - 执行SQL语句=====>DELETE FROM users WHERE username='test12'<=====成功
D 2022-12-27 23:29:02,041| DEBUG    | [connectionpool.py:connectionpool:_new_conn:227] - Starting new HTTP connection (1): 172.16.9.128:80
D 2022-12-27 23:29:02,048| DEBUG    | [connectionpool.py:connectionpool:_make_request:452] - http://172.16.9.128:80 "POST /apitest/signup/ HTTP/1.1" 200 59
D 2022-12-27 23:29:02,049| DEBUG    | [requeststart.py:requeststart:send_request:22] - 发起请求的参数为：{'url': 'http://172.16.9.128:80/apitest/signup/', 'method': 'post', 'json': {'username': 'test06', 'password': '123456', 'confirm': '123456', 'name': '成功注册用户'}}
D 2022-12-27 23:29:02,050| DEBUG    | [asserts.py:asserts:asserts:18] - Response实际结果为：{'Status': 1000, 'Result': 'Success', 'Message': '注册成功'}
D 2022-12-27 23:29:02,050| DEBUG    | [asserts.py:asserts:asserts:19] - Response预期结果为：{'Status': 1000, 'Result': 'Success', 'Message': '注册成功'}
I 2022-12-27 23:29:02,050| INFO     | [asserts.py:asserts:asserts:21] - 断言用例通过！
D 2022-12-27 23:29:02,052| DEBUG    | [mysql.py:mysql:asserts_db:152] - 验库的预期结果：(1, 1)
D 2022-12-27 23:29:02,053| DEBUG    | [mysql.py:mysql:asserts_db:153] - 验库的实际结果：(1, 1)
I 2022-12-27 23:29:02,053| INFO     | [mysql.py:mysql:asserts_db:155] - 验证数据库用例通过！
D 2022-12-27 23:29:02,062| DEBUG    | [connectionpool.py:connectionpool:_new_conn:227] - Starting new HTTP connection (1): 172.16.9.128:80
D 2022-12-27 23:29:02,065| DEBUG    | [connectionpool.py:connectionpool:_make_request:452] - http://172.16.9.128:80 "POST /apitest/signup/ HTTP/1.1" 200 92
D 2022-12-27 23:29:02,065| DEBUG    | [requeststart.py:requeststart:send_request:22] - 发起请求的参数为：{'url': 'http://172.16.9.128:80/apitest/signup/', 'method': 'post', 'json': {'username': '', 'password': '123456', 'confirm': '123456', 'name': '注册用户名为空用户'}}
D 2022-12-27 23:29:02,066| DEBUG    | [asserts.py:asserts:asserts:18] - Response实际结果为：{'Status': 1001, 'Result': 'Username is null', 'Message': '注册失败，用户名不能为空'}
D 2022-12-27 23:29:02,066| DEBUG    | [asserts.py:asserts:asserts:19] - Response预期结果为：{'Status': 1001, 'Result': 'Username is null', 'Message': '注册失败，用户名不能为空'}
I 2022-12-27 23:29:02,067| INFO     | [asserts.py:asserts:asserts:21] - 断言用例通过！
D 2022-12-27 23:29:02,068| DEBUG    | [mysql.py:mysql:asserts_db:152] - 验库的预期结果：(0, 0)
D 2022-12-27 23:29:02,068| DEBUG    | [mysql.py:mysql:asserts_db:153] - 验库的实际结果：(0, 0)
I 2022-12-27 23:29:02,068| INFO     | [mysql.py:mysql:asserts_db:155] - 验证数据库用例通过！
D 2022-12-27 23:29:02,075| DEBUG    | [connectionpool.py:connectionpool:_new_conn:227] - Starting new HTTP connection (1): 172.16.9.128:80
D 2022-12-27 23:29:02,079| DEBUG    | [connectionpool.py:connectionpool:_make_request:452] - http://172.16.9.128:80 "POST /apitest/signup/ HTTP/1.1" 200 89
D 2022-12-27 23:29:02,080| DEBUG    | [requeststart.py:requeststart:send_request:22] - 发起请求的参数为：{'url': 'http://172.16.9.128:80/apitest/signup/', 'method': 'post', 'json': {'username': 'test07', 'password': '', 'confirm': '123456', 'name': '注册密码为空用户'}}
D 2022-12-27 23:29:02,081| DEBUG    | [asserts.py:asserts:asserts:18] - Response实际结果为：{'Status': 1002, 'Result': 'Password is null', 'Message': '注册失败，密码不能为空'}
D 2022-12-27 23:29:02,081| DEBUG    | [asserts.py:asserts:asserts:19] - Response预期结果为：{'Status': 1002, 'Result': 'Password is null', 'Message': '注册失败，密码不能为空'}
I 2022-12-27 23:29:02,082| INFO     | [asserts.py:asserts:asserts:21] - 断言用例通过！
D 2022-12-27 23:29:02,083| DEBUG    | [mysql.py:mysql:asserts_db:152] - 验库的预期结果：(0, 0)
D 2022-12-27 23:29:02,084| DEBUG    | [mysql.py:mysql:asserts_db:153] - 验库的实际结果：(0, 0)
I 2022-12-27 23:29:02,084| INFO     | [mysql.py:mysql:asserts_db:155] - 验证数据库用例通过！
D 2022-12-27 23:29:02,092| DEBUG    | [connectionpool.py:connectionpool:_new_conn:227] - Starting new HTTP connection (1): 172.16.9.128:80
D 2022-12-27 23:29:02,100| DEBUG    | [connectionpool.py:connectionpool:_make_request:452] - http://172.16.9.128:80 "POST /apitest/signup/ HTTP/1.1" 200 103
D 2022-12-27 23:29:02,101| DEBUG    | [requeststart.py:requeststart:send_request:22] - 发起请求的参数为：{'url': 'http://172.16.9.128:80/apitest/signup/', 'method': 'post', 'json': {'username': 'test08', 'password': '123456', 'confirm': '', 'name': '注册确认密码为空用户'}}
D 2022-12-27 23:29:02,101| DEBUG    | [asserts.py:asserts:asserts:18] - Response实际结果为：{'Status': 1003, 'Result': 'Confirm password is null', 'Message': '注册失败，确认密码不能为空'}
D 2022-12-27 23:29:02,102| DEBUG    | [asserts.py:asserts:asserts:19] - Response预期结果为：{'Status': 1003, 'Result': 'Confirm password is null', 'Message': '注册失败，确认密码不能为空'}
I 2022-12-27 23:29:02,102| INFO     | [asserts.py:asserts:asserts:21] - 断言用例通过！
D 2022-12-27 23:29:02,104| DEBUG    | [mysql.py:mysql:asserts_db:152] - 验库的预期结果：(1, 1)
D 2022-12-27 23:29:02,104| DEBUG    | [mysql.py:mysql:asserts_db:153] - 验库的实际结果：(1, 1)
I 2022-12-27 23:29:02,104| INFO     | [mysql.py:mysql:asserts_db:155] - 验证数据库用例通过！
D 2022-12-27 23:29:02,113| DEBUG    | [connectionpool.py:connectionpool:_new_conn:227] - Starting new HTTP connection (1): 172.16.9.128:80
D 2022-12-27 23:29:02,116| DEBUG    | [connectionpool.py:connectionpool:_make_request:452] - http://172.16.9.128:80 "POST /apitest/signup/ HTTP/1.1" 200 85
D 2022-12-27 23:29:02,116| DEBUG    | [requeststart.py:requeststart:send_request:22] - 发起请求的参数为：{'url': 'http://172.16.9.128:80/apitest/signup/', 'method': 'post', 'json': {'username': 'test09', 'password': '123456', 'confirm': '123456', 'name': ''}}
D 2022-12-27 23:29:02,117| DEBUG    | [asserts.py:asserts:asserts:18] - Response实际结果为：{'Status': 1004, 'Result': 'Name is null', 'Message': '注册失败，姓名不能为空'}
D 2022-12-27 23:29:02,118| DEBUG    | [asserts.py:asserts:asserts:19] - Response预期结果为：{'Status': 1004, 'Result': 'Name is null', 'Message': '注册失败，姓名不能为空'}
I 2022-12-27 23:29:02,119| INFO     | [asserts.py:asserts:asserts:21] - 断言用例通过！
D 2022-12-27 23:29:02,121| DEBUG    | [mysql.py:mysql:asserts_db:152] - 验库的预期结果：(0, 0)
D 2022-12-27 23:29:02,121| DEBUG    | [mysql.py:mysql:asserts_db:153] - 验库的实际结果：(0, 0)
I 2022-12-27 23:29:02,121| INFO     | [mysql.py:mysql:asserts_db:155] - 验证数据库用例通过！
D 2022-12-27 23:29:02,129| DEBUG    | [connectionpool.py:connectionpool:_new_conn:227] - Starting new HTTP connection (1): 172.16.9.128:80
D 2022-12-27 23:29:02,131| DEBUG    | [connectionpool.py:connectionpool:_make_request:452] - http://172.16.9.128:80 "POST /apitest/signup/ HTTP/1.1" 200 92
D 2022-12-27 23:29:02,132| DEBUG    | [requeststart.py:requeststart:send_request:22] - 发起请求的参数为：{'url': 'http://172.16.9.128:80/apitest/signup/', 'method': 'post', 'json': {'username': '', 'password': '', 'confirm': '', 'name': ''}}
D 2022-12-27 23:29:02,132| DEBUG    | [asserts.py:asserts:asserts:18] - Response实际结果为：{'Status': 1001, 'Result': 'Username is null', 'Message': '注册失败，用户名不能为空'}
D 2022-12-27 23:29:02,133| DEBUG    | [asserts.py:asserts:asserts:19] - Response预期结果为：{'Status': 1001, 'Result': 'Username is null', 'Message': '注册失败，用户名不能为空'}
I 2022-12-27 23:29:02,133| INFO     | [asserts.py:asserts:asserts:21] - 断言用例通过！
D 2022-12-27 23:29:02,135| DEBUG    | [mysql.py:mysql:asserts_db:152] - 验库的预期结果：(0, 0)
D 2022-12-27 23:29:02,135| DEBUG    | [mysql.py:mysql:asserts_db:153] - 验库的实际结果：(0, 0)
I 2022-12-27 23:29:02,135| INFO     | [mysql.py:mysql:asserts_db:155] - 验证数据库用例通过！
D 2022-12-27 23:29:02,142| DEBUG    | [connectionpool.py:connectionpool:_new_conn:227] - Starting new HTTP connection (1): 172.16.9.128:80
D 2022-12-27 23:29:02,145| DEBUG    | [connectionpool.py:connectionpool:_make_request:452] - http://172.16.9.128:80 "POST /apitest/signup/ HTTP/1.1" 200 98
D 2022-12-27 23:29:02,146| DEBUG    | [requeststart.py:requeststart:send_request:22] - 发起请求的参数为：{'url': 'http://172.16.9.128:80/apitest/signup/', 'method': 'post', 'json': {'username': 'test10', 'password': '123456', 'confirm': '123', 'name': '注册两个密码不一致用户'}}
D 2022-12-27 23:29:02,147| DEBUG    | [asserts.py:asserts:asserts:18] - Response实际结果为：{'Status': 1009, 'Result': 'Confirm password error', 'Message': '注册失败，两个密码不一致'}
D 2022-12-27 23:29:02,148| DEBUG    | [asserts.py:asserts:asserts:19] - Response预期结果为：{'Status': 1009, 'Result': 'Confirm password error', 'Message': '注册失败，两个密码不一致'}
I 2022-12-27 23:29:02,148| INFO     | [asserts.py:asserts:asserts:21] - 断言用例通过！
D 2022-12-27 23:29:02,170| DEBUG    | [mysql.py:mysql:asserts_db:152] - 验库的预期结果：(0, 0)
D 2022-12-27 23:29:02,170| DEBUG    | [mysql.py:mysql:asserts_db:153] - 验库的实际结果：(0, 0)
I 2022-12-27 23:29:02,171| INFO     | [mysql.py:mysql:asserts_db:155] - 验证数据库用例通过！
D 2022-12-27 23:29:02,180| DEBUG    | [connectionpool.py:connectionpool:_new_conn:227] - Starting new HTTP connection (1): 172.16.9.128:80
D 2022-12-27 23:29:02,185| DEBUG    | [connectionpool.py:connectionpool:_make_request:452] - http://172.16.9.128:80 "POST /apitest/signup/ HTTP/1.1" 200 100
D 2022-12-27 23:29:02,186| DEBUG    | [requeststart.py:requeststart:send_request:22] - 发起请求的参数为：{'url': 'http://172.16.9.128:80/apitest/signup/', 'method': 'post', 'json': {'username': 'test11', 'password': '123456', 'confirm': '123456', 'name': '重复注册用户'}}
D 2022-12-27 23:29:02,187| DEBUG    | [asserts.py:asserts:asserts:18] - Response实际结果为：{'Status': 1010, 'Result': 'Username test11 is taken', 'Message': '注册失败，用户名已被占用'}
D 2022-12-27 23:29:02,187| DEBUG    | [asserts.py:asserts:asserts:19] - Response预期结果为：{'Status': 1010, 'Result': 'Username test11 is taken', 'Message': '注册失败，用户名已被占用'}
I 2022-12-27 23:29:02,187| INFO     | [asserts.py:asserts:asserts:21] - 断言用例通过！
D 2022-12-27 23:29:02,189| DEBUG    | [mysql.py:mysql:asserts_db:152] - 验库的预期结果：(1, 1)
D 2022-12-27 23:29:02,189| DEBUG    | [mysql.py:mysql:asserts_db:153] - 验库的实际结果：(1, 1)
I 2022-12-27 23:29:02,189| INFO     | [mysql.py:mysql:asserts_db:155] - 验证数据库用例通过！
D 2022-12-27 23:29:02,198| DEBUG    | [connectionpool.py:connectionpool:_new_conn:227] - Starting new HTTP connection (1): 172.16.9.128:80
D 2022-12-27 23:29:02,203| DEBUG    | [connectionpool.py:connectionpool:_make_request:452] - http://172.16.9.128:80 "POST /apitest/signup/ HTTP/1.1" 200 59
D 2022-12-27 23:29:02,220| DEBUG    | [requeststart.py:requeststart:send_request:22] - 发起请求的参数为：{'url': 'http://172.16.9.128:80/apitest/signup/', 'method': 'post', 'json': {'username': '阳靖康', 'password': '123456', 'confirm': '123456', 'name': '中文注册用户'}}
D 2022-12-27 23:29:02,221| DEBUG    | [asserts.py:asserts:asserts:18] - Response实际结果为：{'Status': 1000, 'Result': 'Success', 'Message': '注册成功'}
D 2022-12-27 23:29:02,222| DEBUG    | [asserts.py:asserts:asserts:19] - Response预期结果为：{'Status': 1000, 'Result': 'Success', 'Message': '注册成功'}
I 2022-12-27 23:29:02,222| INFO     | [asserts.py:asserts:asserts:21] - 断言用例通过！
D 2022-12-27 23:29:02,224| DEBUG    | [mysql.py:mysql:asserts_db:152] - 验库的预期结果：(1, 1)
D 2022-12-27 23:29:02,225| DEBUG    | [mysql.py:mysql:asserts_db:153] - 验库的实际结果：(1, 1)
I 2022-12-27 23:29:02,225| INFO     | [mysql.py:mysql:asserts_db:155] - 验证数据库用例通过！
D 2022-12-27 23:29:02,231| DEBUG    | [connectionpool.py:connectionpool:_new_conn:227] - Starting new HTTP connection (1): 172.16.9.128:80
D 2022-12-27 23:29:02,236| DEBUG    | [connectionpool.py:connectionpool:_make_request:452] - http://172.16.9.128:80 "POST /apitest/signup/ HTTP/1.1" 200 59
D 2022-12-27 23:29:02,236| DEBUG    | [requeststart.py:requeststart:send_request:22] - 发起请求的参数为：{'url': 'http://172.16.9.128:80/apitest/signup/', 'method': 'post', 'json': {'username': '%￥#@&*', 'password': '123456', 'confirm': '123456', 'name': '特殊字符用户'}}
D 2022-12-27 23:29:02,237| DEBUG    | [asserts.py:asserts:asserts:18] - Response实际结果为：{'Status': 1000, 'Result': 'Success', 'Message': '注册成功'}
D 2022-12-27 23:29:02,237| DEBUG    | [asserts.py:asserts:asserts:19] - Response预期结果为：{'Status': 1000, 'Result': 'Success', 'Message': '注册成功'}
I 2022-12-27 23:29:02,237| INFO     | [asserts.py:asserts:asserts:21] - 断言用例通过！
D 2022-12-27 23:29:02,239| DEBUG    | [mysql.py:mysql:asserts_db:152] - 验库的预期结果：(1, 1)
D 2022-12-27 23:29:02,239| DEBUG    | [mysql.py:mysql:asserts_db:153] - 验库的实际结果：(1, 1)
I 2022-12-27 23:29:02,239| INFO     | [mysql.py:mysql:asserts_db:155] - 验证数据库用例通过！
D 2022-12-27 23:29:02,245| DEBUG    | [connectionpool.py:connectionpool:_new_conn:227] - Starting new HTTP connection (1): 172.16.9.128:80
D 2022-12-27 23:29:02,249| DEBUG    | [connectionpool.py:connectionpool:_make_request:452] - http://172.16.9.128:80 "POST /apitest/signup/ HTTP/1.1" 200 59
D 2022-12-27 23:29:02,249| DEBUG    | [requeststart.py:requeststart:send_request:22] - 发起请求的参数为：{'url': 'http://172.16.9.128:80/apitest/signup/', 'method': 'post', 'json': {'username': 'test12', 'password': '阳靖康', 'confirm': '阳靖康', 'name': '注册密码为中文'}}
D 2022-12-27 23:29:02,250| DEBUG    | [asserts.py:asserts:asserts:18] - Response实际结果为：{'Status': 1000, 'Result': 'Success', 'Message': '注册成功'}
D 2022-12-27 23:29:02,250| DEBUG    | [asserts.py:asserts:asserts:19] - Response预期结果为：{'Status': 1000, 'Result': 'Success', 'Message': '注册成功'}
I 2022-12-27 23:29:02,250| INFO     | [asserts.py:asserts:asserts:21] - 断言用例通过！
D 2022-12-27 23:29:02,251| DEBUG    | [mysql.py:mysql:asserts_db:152] - 验库的预期结果：(1, 1)
D 2022-12-27 23:29:02,252| DEBUG    | [mysql.py:mysql:asserts_db:153] - 验库的实际结果：(1, 1)
I 2022-12-27 23:29:02,252| INFO     | [mysql.py:mysql:asserts_db:155] - 验证数据库用例通过！
I 2022-12-27 23:29:02,255| INFO     | [preposition_fixture.py:preposition_fixture:connect_db:32] - *********************开始关闭数据库连接*********************
D 2022-12-27 23:29:02,255| DEBUG    | [mysql.py:mysql:close_db:165] - ==============================关闭数据库成功===============================
